{"createdAt":"2025-07-14T20:39:00.478Z","updatedAt":"2025-07-20T03:22:12.178Z","id":"R3wPrQR0rYDcXpkq","name":"Poll Messages","active":true,"isArchived":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"8d2fcb7f-7f82-4dc5-a7f4-687b493fb5e0","name":"tomoPhone","value":"+85291356545","type":"string"},{"id":"10f4c204-f200-424a-9bd6-1c38fca15177","name":"tomoUUID","value":"dd104d16-db00-41de-bcb6-4a3c1d7cb245","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[220,-160],"id":"b8664183-1073-493c-958b-ac65271e5486","name":"Set Tomo Phone Number and UUID"},{"parameters":{"url":"=https://n8n.srv845833.hstgr.cloud/signal/v1/receive/{{ $json.tomoPhone }}","sendQuery":true,"queryParameters":{"parameters":[{"name":"send_read_receipts","value":"true"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[440,-160],"id":"b4a9f214-52fc-4d32-ad3f-de02bd787ac6","name":"Poll Messages","retryOnFail":true},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ Object.keys($json.envelope).includes(\"dataMessage\") }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true},"id":"7a2d12af-eb37-426e-9b50-b96faf25d947"}],"combinator":"and"},"renameOutput":true,"outputKey":"INBOUND MESSAGE"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"819c7b42-2f37-47b7-ba65-0f1c9accbef5","leftValue":"={{ Object.keys($json.envelope).includes(\"syncMessage\") && Object.keys($json.envelope[\"syncMessage\"]).includes(\"sentMessage\") }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"SENT MESSAGE"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"94b13e45-9036-4414-aadc-d114e3a18f04","leftValue":"={{ Object.keys($json.envelope).includes(\"receiptMessage\") }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"renameOutput":true,"outputKey":"RECEIPT MESSAGE"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[1100,-160],"id":"d5e5cbfd-d5dd-40a1-ad7c-9d7470edcea6","name":"Switch"},{"parameters":{"tableId":"signal_messages","fieldsUi":{"fieldValues":[{"fieldId":"signal_timestamp","fieldValue":"={{ $('Switch').item.json.envelope.dataMessage.timestamp }}"},{"fieldId":"signal_timestamp_utc","fieldValue":"={{ $json.timetampUTC }}"},{"fieldId":"sender_phone","fieldValue":"={{ $('Switch').item.json.envelope.sourceNumber }}"},{"fieldId":"recipient_phone","fieldValue":"={{ $('Set Tomo Phone Number and UUID').first().json.tomoPhone }}"},{"fieldId":"message_text","fieldValue":"={{ $('Switch').item.json.envelope.dataMessage.message }}"},{"fieldId":"direction","fieldValue":"inbound"},{"fieldId":"sender_uuid","fieldValue":"={{ $('Switch').item.json.envelope.sourceUuid }}"},{"fieldId":"recipient_uuid","fieldValue":"={{ $('Set Tomo Phone Number and UUID').item.json.tomoUUID }}"},{"fieldId":"attachments","fieldValue":"={{ ($('Switch').item.json.envelope.dataMessage.attachments ?? null) }}"},{"fieldId":"raw_payload","fieldValue":"={{ $('Switch').item.json }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1540,-360],"id":"7552843b-b6e5-4e4e-8bed-9b9ddc0bcbc4","name":"Save Message","retryOnFail":true,"credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"assignments":{"assignments":[{"id":"994defb3-f232-4a03-a0c8-248ff454b522","name":"timetampUTC","value":"={{ $json.envelope.dataMessage.timestamp.toDateTime('ms').toUTC() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1320,-360],"id":"efc39e1f-ed21-437c-8209-48fb6b8e5ff9","name":"Parse Timestamp from Inbound Message"},{"parameters":{"assignments":{"assignments":[{"id":"6e1815f3-19f5-419f-9fbb-06a3814c451d","name":"phoneNumber","value":"={{ $json.envelope.syncMessage.sentMessage.destinationNumber }}","type":"string"},{"id":"820bb73f-3a47-4066-80b1-ddc47d8fe3da","name":"signalUuid","value":"={{ $json.envelope.syncMessage.sentMessage.destinationUuid }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1320,-160],"id":"324d08ed-a8d7-49f9-bf10-dab549a775d3","name":"Extract Phone and UUID from Sent Message"},{"parameters":{"assignments":{"assignments":[{"id":"6e1815f3-19f5-419f-9fbb-06a3814c451d","name":"phoneNumber","value":"={{ $json.envelope.sourceNumber }}","type":"string"},{"id":"820bb73f-3a47-4066-80b1-ddc47d8fe3da","name":"signalUuid","value":"={{ $json.envelope.sourceUuid }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1320,40],"id":"fcd13a2d-d3e4-4075-b1dc-0792421d95fa","name":"Extract Phone and UUID from Sent Receipt"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"386aa916-8375-4310-9940-e3e91138758a","leftValue":"={{ $json.phoneNumber }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}},{"id":"ca55db0d-7b86-4c2f-a8b1-eb3577a1b446","leftValue":"={{ $json.phoneNumber }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1540,-60],"id":"36b777dc-f3ff-419e-9862-3755db31ce5e","name":"Phone Exists?"},{"parameters":{"operation":"update","tableId":"users","matchType":"allFilters","filters":{"conditions":[{"keyName":"phone_number","condition":"eq","keyValue":"={{ $json.phoneNumber }}"},{"keyName":"signal_source_uuid","condition":"is","keyValue":"={{ null }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"signal_source_uuid","fieldValue":"={{ $json.signalUuid }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1760,-60],"id":"03eacaef-1edc-46b7-bc00-17d9d1e2cac6","name":"Update User with Signal UUID","retryOnFail":true,"credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"fieldToSplitOut":"data","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[880,-160],"id":"6a118197-b640-4d0a-aca2-5a49e002a93b","name":"Split Out"},{"parameters":{"assignments":{"assignments":[{"id":"970a1c0e-2d05-4bf8-a5e4-3411e5cfd08a","name":"data","value":"={{ JSON.parse($json.data) }}","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[660,-160],"id":"24f76c04-3c78-48f4-a793-b3520f7739f6","name":"Parse Response"},{"parameters":{"rule":{"interval":[{"field":"seconds","secondsInterval":5}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,-160],"id":"8c0b5ba7-4174-4eaf-ba2b-764ea0161c01","name":"Run Every 5 Seconds"},{"parameters":{"workflowId":{"__rl":true,"value":"K7dK4EzGjSmTsV8d","mode":"list","cachedResultName":"Get Conversation"},"workflowInputs":{"mappingMode":"defineBelow","value":{"phone":"={{ $('Save Message').item.json.sender_phone }}","signal_uuid":"={{ $('Save Message').item.json.sender_uuid }}"},"matchingColumns":[],"schema":[{"id":"phone","displayName":"phone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"signal_uuid","displayName":"signal_uuid","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[1980,-360],"id":"008ea205-5a23-46f7-9da0-07f5642b6e16","name":"Get Chat History"},{"parameters":{"workflowId":{"__rl":true,"value":"HJig3GSnPd2OWIIl","mode":"list","cachedResultName":"Send Signal Message"},"workflowInputs":{"mappingMode":"defineBelow","value":{"message":"={{ $json.output }}","phone":"={{ $('Save Message').item.json.sender_phone }}"},"matchingColumns":[],"schema":[{"id":"phone","displayName":"phone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"message","displayName":"message","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[2640,-360],"id":"1e0f906c-ae26-4ee8-9b7a-8e7c04dab9b2","name":"Send Signal Message"},{"parameters":{"model":"openai/gpt-4.1","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[2200,-140],"id":"68028ab7-1c04-4fa5-888f-e23e839c52fa","name":"GPT 4.1","credentials":{"openRouterApi":{"id":"SeBKTiKFu0nP1GsL","name":"OpenRouter account"}}},{"parameters":{"promptType":"define","text":"=# Chat History:\n{{ JSON.stringify($json.chat_history) }}\n\n# User message\n{{ $('Save Message').item.json.message_text }}","options":{"systemMessage":"=You are an expert scheduling assistant. Your primary goal is to help the user find available time and book meetings on their calendar efficiently. You must adhere to the following rules and workflows.\n\n**Core Directives:**\n\n  * **Be Concise:** Your responses should be direct and to the point. Confirm actions and provide necessary information without unnecessary conversational filler.\n  * **Always Verify Availability First:** Before booking any time, you MUST first use the `find_time` tool to check for open slots.\n  * **Provide the Meeting Link:** After successfully booking an event, your final response to the user MUST include the Google Meet link.\n\n**Tool Usage:**\n\n1.  **`find_time`**\n\n      * **Purpose:** To check the user's calendar for available time blocks.\n      * **When to Use:** Use this as the first step for ALL scheduling requests.\n\n2.  **`block_time`**\n\n      * **Purpose:** To create an event in the user's Google Calendar.\n      * **When to Use:** Use this after confirming an available time slot.\n      * **Output Handling:** This tool returns the raw JSON response from the Google Calendar API. You must parse this response, extract the value of the **`hangoutLink`** property, and present this link clearly to the user.\n\n-----\n\n**Workflows**\n\nYou must identify the user's intent and follow one of two primary workflows:\n\n**Workflow 1: Standard Scheduling**\n\n  * **Trigger:** When the user wants to schedule a meeting for a future date/time or with specific people (e.g., \"book a meeting for tomorrow,\" \"find time with Jane next week\").\n  * **Steps:**\n    1.  Use `find_time` to identify all available slots that match the user's request.\n    2.  Present the available time slots to the user as a clear list of options.\n    3.  Once the user confirms their choice, use `block_time` to create the event.\n    4.  Respond with a confirmation and the extracted `hangoutLink`.\n\n**Workflow 2: Instant Meeting Link**\n\n  * **Trigger:** When the user asks for a meeting link **\"now,\" \"immediately,\"** for an **\"instant meeting,\"** or uses similar urgent language indicating a need for an immediate link.\n  * **Steps:**\n    1.  Use `find_time` to find the very next available 15-minute slot starting from the current time.\n    2.  **Immediately** use `block_time` to book that slot. **Do not ask the user for confirmation.** The goal is speed.\n    3.  Respond immediately with a confirmation that you've booked the next available slot and provide the extracted `hangoutLink`.\n\n      * **Example Response:** \"I've booked the next available 15 minutes for you. Here is your instant meeting link: [https://meet.google.com/xyz-abc-pqr](https://www.google.com/search?q=https://meet.google.com/xyz-abc-pqr)\""}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2240,-360],"id":"65fafd12-457d-4de7-bb78-245c5e165376","name":"Signal Agent"},{"parameters":{"description":"Use this tool to find available time slots in the user's calendar within a specified time range. Use this as the first step for any scheduling request to check for availability.\n\nParameters:\n\nlimit (integer): The maximum number of available time slots to return. If not specified, the default value is 10.\n\nfrom (string): The start of the time range to search, formatted as an ISO 8601 string (e.g., \"2025-07-21T09:00:00-05:00\"). This field is required.\n\nto (string): The end of the time range to search, formatted as an ISO 8601 string (e.g., \"2025-07-21T17:00:00-05:00\"). This field is required.","workflowId":{"__rl":true,"value":"MPm81H6BEFVS24LU","mode":"list","cachedResultName":"[Signal] Find Time"},"workflowInputs":{"mappingMode":"defineBelow","value":{"limit":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('limit', ``, 'number') }}","from":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('from', ``, 'string') }}","to":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('to', ``, 'string') }}","userId":"={{ $('Get User').item.json.id }}"},"matchingColumns":[],"schema":[{"id":"userId","displayName":"userId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"limit","displayName":"limit","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"from","displayName":"from","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"to","displayName":"to","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[2320,-140],"id":"b1a4e094-f35d-426b-a4bf-f2e63e15cfb3","name":"Find Time"},{"parameters":{"operation":"get","tableId":"users","filters":{"conditions":[{"keyName":"phone_number","keyValue":"={{ $json.sender_phone }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1760,-360],"id":"5b1f1597-450c-49eb-aa43-7c35999c0216","name":"Get User","credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"description":"=Creates a new event in the user's calendar and generates a Google Meet link for it. Use this tool only after a specific time slot has been confirmed by the user, unless it's for an \"instant meeting\" request.\n\n**Parameters:**\n\n* **`title`** (`string`): The main title for the calendar event. This field is required.\n* **`description`** (`string`): A detailed description for the event. This is an optional field.\n* **`start`** (`string`): The start time for the event, formatted as an ISO 8601 string (e.g., \"2025-07-21T14:30:00-05:00\"). This field is required.\n* **`duration`** (`integer`): The duration of the event in minutes. If not specified, the default value is **60**.","workflowId":{"__rl":true,"value":"esH7uWaSdFwwqLd1","mode":"list","cachedResultName":"[Signal] Block Time with Meeting"},"workflowInputs":{"mappingMode":"defineBelow","value":{"description":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('description', ``, 'string') }}","start":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('start', ``, 'string') }}","duration":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('duration', ``, 'number') }}","title":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('title', ``, 'string') }}","summary":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('summary', ``, 'string') }}","userId":"={{ $('Get User').item.json.id }}"},"matchingColumns":[],"schema":[{"id":"description","displayName":"description","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"start","displayName":"start","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"duration","displayName":"duration","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"title","displayName":"title","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"userId","displayName":"userId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"summary","displayName":"summary","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[2440,-140],"id":"bb4ff126-bac9-4fc0-a7d4-2bd991920469","name":"Block Time"}],"connections":{"Set Tomo Phone Number and UUID":{"main":[[{"node":"Poll Messages","type":"main","index":0}]]},"Poll Messages":{"main":[[{"node":"Parse Response","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Parse Timestamp from Inbound Message","type":"main","index":0}],[{"node":"Extract Phone and UUID from Sent Message","type":"main","index":0}],[{"node":"Extract Phone and UUID from Sent Receipt","type":"main","index":0}]]},"Parse Timestamp from Inbound Message":{"main":[[{"node":"Save Message","type":"main","index":0}]]},"Extract Phone and UUID from Sent Message":{"main":[[{"node":"Phone Exists?","type":"main","index":0}]]},"Extract Phone and UUID from Sent Receipt":{"main":[[{"node":"Phone Exists?","type":"main","index":0}]]},"Phone Exists?":{"main":[[{"node":"Update User with Signal UUID","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Parse Response":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Run Every 5 Seconds":{"main":[[{"node":"Set Tomo Phone Number and UUID","type":"main","index":0}]]},"Save Message":{"main":[[{"node":"Get User","type":"main","index":0}]]},"Get Chat History":{"main":[[{"node":"Signal Agent","type":"main","index":0}]]},"GPT 4.1":{"ai_languageModel":[[{"node":"Signal Agent","type":"ai_languageModel","index":0}]]},"Signal Agent":{"main":[[{"node":"Send Signal Message","type":"main","index":0}]]},"Find Time":{"ai_tool":[[{"node":"Signal Agent","type":"ai_tool","index":0}]]},"Get User":{"main":[[{"node":"Get Chat History","type":"main","index":0}]]},"Block Time":{"ai_tool":[[{"node":"Signal Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Run Every 30 Seconds":{"recurrenceRules":[]},"node:Run Every 15 Seconds":{"recurrenceRules":[]},"node:Run Every 5 Seconds":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{"Run Every 5 Seconds":[{"json":{"timestamp":"2025-07-17T00:35:35.001+02:00","Readable date":"July 17th 2025, 12:35:35 am","Readable time":"12:35:35 am","Day of week":"Thursday","Year":"2025","Month":"July","Day of month":"17","Hour":"00","Minute":"35","Second":"35","Timezone":"Europe/Berlin (UTC+02:00)"}}],"Save Message":[{"json":{"id":"41846e80-4ddb-44e9-a76e-5fca502be70f","created_at":"2025-07-16T22:35:40.137797+00:00","signal_timestamp":1752705335507,"signal_timestamp_utc":"2025-07-16T22:35:35.507+00:00","sender_uuid":"1794451c-454e-4a15-b409-99a0c19f5bcd","sender_phone":"+573195884149","recipient_uuid":"dd104d16-db00-41de-bcb6-4a3c1d7cb245","recipient_phone":"+85291356545","message_text":"Hi, Tomo","raw_payload":{"account":"+85291356545","envelope":{"source":"+573195884149","timestamp":1752705335507,"sourceName":"AM3","sourceUuid":"1794451c-454e-4a15-b409-99a0c19f5bcd","dataMessage":{"message":"Hi, Tomo","viewOnce":false,"timestamp":1752705335507,"expiresInSeconds":0},"sourceDevice":1,"sourceNumber":"+573195884149","serverReceivedTimestamp":1752705335666,"serverDeliveredTimestamp":1752705337669}},"attachments":null,"group_id":null,"direction":"inbound"}}],"Poll Messages":[{"json":{"data":"[{\"envelope\":{\"source\":\"+573195884149\",\"sourceNumber\":\"+573195884149\",\"sourceUuid\":\"1794451c-454e-4a15-b409-99a0c19f5bcd\",\"sourceName\":\"AM3\",\"sourceDevice\":1,\"timestamp\":1752705335507,\"serverReceivedTimestamp\":1752705335666,\"serverDeliveredTimestamp\":1752705337669,\"dataMessage\":{\"timestamp\":1752705335507,\"message\":\"Hi, Tomo\",\"expiresInSeconds\":0,\"viewOnce\":false}},\"account\":\"+85291356545\"}]"}}],"Parse Response":[{"json":{"data":[{"envelope":{"source":"+573195884149","sourceNumber":"+573195884149","sourceUuid":"1794451c-454e-4a15-b409-99a0c19f5bcd","sourceName":"AM3","sourceDevice":1,"timestamp":1752705335507,"serverReceivedTimestamp":1752705335666,"serverDeliveredTimestamp":1752705337669,"dataMessage":{"timestamp":1752705335507,"message":"Hi, Tomo","expiresInSeconds":0,"viewOnce":false}},"account":"+85291356545"}]}}],"Split Out":[{"json":{"envelope":{"source":"+573195884149","sourceNumber":"+573195884149","sourceUuid":"1794451c-454e-4a15-b409-99a0c19f5bcd","sourceName":"AM3","sourceDevice":1,"timestamp":1752705335507,"serverReceivedTimestamp":1752705335666,"serverDeliveredTimestamp":1752705337669,"dataMessage":{"timestamp":1752705335507,"message":"Hi, Tomo","expiresInSeconds":0,"viewOnce":false}},"account":"+85291356545"}}],"Parse Timestamp from Inbound Message":[{"json":{"timetampUTC":"2025-07-16T22:35:35.507Z"}}]},"versionId":"771f6fb5-9348-4dc8-886e-6730609c48e6","triggerCount":1,"tags":[]}
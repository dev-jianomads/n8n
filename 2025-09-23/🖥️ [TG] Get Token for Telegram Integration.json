{"createdAt":"2025-07-30T17:52:46.883Z","updatedAt":"2025-09-23T17:26:22.086Z","id":"OH9PUovRKlvZel5e","name":"üñ•Ô∏è [TG] Get Token for Telegram Integration","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"user_id"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-368,-208],"id":"d1a20128-30da-4df4-b009-335aeb41fae4","name":"When Executed by Another Workflow"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"/**\n * Check if a user's access token is expired.\n * @param {{ access_token?: string | null, token_expiration_date?: string | null }} user\n * @returns {boolean} true if missing or expired\n */\nfunction isTokenExpired(user) {\n  const { access_token_2: token, token_expiration_date_2: exp } = user;\n  // No token or no expiration date ‚Üí expired\n  if (!token || !exp) return true;\n\n  // Normalize \"2025-04-16 21:58:02+00\" ‚Üí \"2025-04-16T21:58:02+00\"\n  const iso = exp.replace(' ', 'T');\n  const expiresAt = new Date(iso);\n\n  // Invalid date ‚Üí treat as expired\n  if (isNaN(expiresAt.getTime())) return true;\n\n  // Compare against now (Date.now() is UTC‚Äëbased under the hood)\n  return expiresAt.getTime() < Date.now();\n}\n\nreturn {\n  json: {\n    user: $input.item.json,\n    expiredToken: isTokenExpired($input.item.json)\n  }\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[304,-208],"id":"246cde17-aed3-4f45-b1c8-4b4cfb3611ff","name":"Check Token Expiration"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"05a3655d-1a5c-407e-abd9-b77305dc158a","leftValue":"={{ $json.expiredToken }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[528,-208],"id":"84d1d798-e9c3-4d0d-ba69-6b6e161ee7d2","name":"Expired Token?"},{"parameters":{"assignments":{"assignments":[{"id":"cb8984ad-464a-45b8-9d96-89e6c213699e","name":"accessToken","value":"={{ $('Set User').item.json.access_token_2 }}","type":"string"},{"id":"c2055894-db45-4a28-8375-2472fde8585c","name":"user","value":"={{ $('Set User').item.json }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[752,-112],"id":"15bf5728-97c4-46e9-8f64-d0579c84edac","name":"Return Token and User"},{"parameters":{"operation":"addToDate","magnitude":"={{ $now.toUTC() }}","timeUnit":"seconds","duration":"={{ $json.body.expires_in - 120 }}","outputFieldName":"tokenExpirationDate","options":{"includeInputFields":true}},"type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[976,-400],"id":"48ef4b23-0de1-4d74-856e-12298b1f4fe2","name":"Compute Expiration Date"},{"parameters":{"assignments":{"assignments":[{"id":"ae218e7e-2994-42cf-82d0-81bd7deea876","name":"accessToken","value":"={{ $json.access_token_2 }}","type":"string"},{"id":"8d144ce4-10cf-4da7-9a48-3be19ea43eda","name":"user","value":"={{ $json }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1424,-400],"id":"8e420e92-71c2-45f0-9330-d9e055dee4a8","name":"Return Refreshed Token & User"},{"parameters":{"method":"POST","url":"https://oauth2.googleapis.com/token","sendQuery":true,"queryParameters":{"parameters":[{"name":"client_id","value":"={{ $json.user.client_id_2 }}"},{"name":"client_secret","value":"={{ $json.user.client_secret_2 }}"},{"name":"refresh_token","value":"={{ $json.user.refresh_token_2 }}"},{"name":"grant_type","value":"refresh_token"}]},"options":{"response":{"response":{"fullResponse":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[752,-304],"id":"1c951d75-fa81-4f5a-9182-69a4574d9c7a","name":"Get New Token","onError":"continueErrorOutput"},{"parameters":{"errorMessage":"Could not refresh token."},"type":"n8n-nodes-base.stopAndError","typeVersion":1,"position":[1392,-208],"id":"cd6a1579-4bbf-43b4-9fa4-1228fc06db0e","name":"Stop and Error"},{"parameters":{"operation":"executeQuery","query":"SELECT * \nFROM \"dev\".\"users\"\nWHERE id = '{{ $json.user_id }}'\nLIMIT 1;","options":{"connectionTimeout":2}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-144,-208],"id":"a9d2da51-045e-49d6-9af6-a51de9a5f7a8","name":"Get User","retryOnFail":true,"maxTries":5,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"update","schema":{"__rl":true,"value":"=dev","mode":"name"},"table":{"__rl":true,"value":"users","mode":"list","cachedResultName":"users"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Expired Token?').item.json.user.id }}","access_token_2":"={{ $json.body.access_token }}","token_expiration_date_2":"={{ $json.tokenExpirationDate }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":true},{"id":"email","displayName":"email","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"display_name","displayName":"display_name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"provider","displayName":"provider","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"access_token","displayName":"access_token","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"refresh_token","displayName":"refresh_token","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"expires_in","displayName":"expires_in","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"client_id","displayName":"client_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"client_secret","displayName":"client_secret","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"refresh_expired","displayName":"refresh_expired","required":false,"defaultMatch":false,"display":true,"type":"boolean","canBeUsedToMatch":true,"removed":true},{"id":"time_zone","displayName":"time_zone","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"auth_code","displayName":"auth_code","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"token_expiration_date","displayName":"token_expiration_date","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":true},{"id":"position","displayName":"position","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"role","displayName":"role","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"phone_number","displayName":"phone_number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"access_token_2","displayName":"access_token_2","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"refresh_token_2","displayName":"refresh_token_2","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"refresh_expired_2","displayName":"refresh_expired_2","required":false,"defaultMatch":false,"display":true,"type":"boolean","canBeUsedToMatch":true,"removed":true},{"id":"signal_source_uuid","displayName":"signal_source_uuid","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"token_expiration_date_2","displayName":"token_expiration_date_2","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"connectionTimeout":3}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1200,-400],"id":"d2e3c232-7f8c-4c39-b26d-2c61dc9fe327","name":"Store Token","credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"onError":"continueErrorOutput"},{"parameters":{"mode":"raw","jsonOutput":"={{ $json }}","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[80,-208],"id":"00429d84-b43d-498d-b299-644181f68a3e","name":"Set User"},{"parameters":{"operation":"executeQuery","query":"UPDATE dev.users\nSET refresh_expired_2 = TRUE\nWHERE id = '{{ $('Expired Token?').item.json.user.id }}'","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[976,-208],"id":"45cfbf81-ebc8-43fe-b574-112d7a7488b8","name":"Mark Token as Expired","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"workflowId":{"__rl":true,"value":"kI31iVTkkY44j2Rv","mode":"list","cachedResultUrl":"/workflow/kI31iVTkkY44j2Rv","cachedResultName":"üñ•Ô∏è [TG] Send Telegram Message"},"workflowInputs":{"mappingMode":"defineBelow","value":{"telegramId":"={{ $('Set User').item.json.telegram_id }}","chatId":"={{ $('Set User').item.json.telegram_id }}","message":"It seems we're having issues connecting to your Google Services. \n\nPlease log in again here: https://cal.hellotomo.ai","toolActivity":"={{ [] }}"},"matchingColumns":[],"schema":[{"id":"telegramId","displayName":"telegramId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"message","displayName":"message","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"chatId","displayName":"chatId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"toolActivity","displayName":"toolActivity","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"array","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.3,"position":[1184,-208],"id":"120e6fc6-d51c-4213-9e40-3b030d4e0778","name":"Call 'üñ•Ô∏è [TG] Send Telegram Message'"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get User","type":"main","index":0}]]},"Check Token Expiration":{"main":[[{"node":"Expired Token?","type":"main","index":0}]]},"Expired Token?":{"main":[[{"node":"Get New Token","type":"main","index":0}],[{"node":"Return Token and User","type":"main","index":0}]]},"Compute Expiration Date":{"main":[[{"node":"Store Token","type":"main","index":0}]]},"Get New Token":{"main":[[{"node":"Compute Expiration Date","type":"main","index":0}],[{"node":"Mark Token as Expired","type":"main","index":0}]]},"Get User":{"main":[[{"node":"Set User","type":"main","index":0}],[]]},"Store Token":{"main":[[{"node":"Return Refreshed Token & User","type":"main","index":0}],[]]},"Set User":{"main":[[{"node":"Check Token Expiration","type":"main","index":0}]]},"Mark Token as Expired":{"main":[[{"node":"Call 'üñ•Ô∏è [TG] Send Telegram Message'","type":"main","index":0}]]},"Call 'üñ•Ô∏è [TG] Send Telegram Message'":{"main":[[{"node":"Stop and Error","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"63JMaA3ATIsJVc6Y"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"user_id":"BGHuU026AxKKUhb0CPCbtrA9OF0e"}}]},"versionId":"7e869cab-415c-4dcf-9882-601f338cd7e3","triggerCount":0,"shared":[{"createdAt":"2025-07-30T17:52:46.883Z","updatedAt":"2025-07-30T17:52:46.883Z","role":"workflow:owner","workflowId":"OH9PUovRKlvZel5e","projectId":"8nyfoRCh3nEYWaKJ"}],"tags":[]}
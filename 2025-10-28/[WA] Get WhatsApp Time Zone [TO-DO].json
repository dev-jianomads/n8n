{"updatedAt":"2025-10-28T17:42:52.550Z","createdAt":"2025-10-28T17:41:29.101Z","id":"d7PDXuxH12xsDziS","name":"[WA] Get WhatsApp Time Zone [TO-DO]","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"userId"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[112,944],"id":"4eda8dd6-7943-4069-8498-14f4f82066d7","name":"When Executed by Another Workflow"},{"parameters":{"workflowId":{"__rl":true,"value":"pE2lsrstziYiLtF8","mode":"list","cachedResultUrl":"/workflow/pE2lsrstziYiLtF8","cachedResultName":"[TG] Get Token for TG Integration"},"workflowInputs":{"mappingMode":"defineBelow","value":{"user_id":"={{ $('When Executed by Another Workflow').first().json.userId }}"},"matchingColumns":["user_id"],"schema":[{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[576,528],"id":"3ecf9669-c3b9-464d-b245-514594b10584","name":"Get Token","disabled":true},{"parameters":{"url":"https://www.googleapis.com/calendar/v3/calendars/primary","sendQuery":true,"queryParameters":{"parameters":[{"name":"fields","value":"timeZone"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get Token').first().json.accessToken }}"},{"name":"Content-Type","value":"application/json"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[800,528],"id":"e57b372b-6911-49c8-b5f8-9e2e0bce753b","name":"Get Time Zone from Primary Calendar","retryOnFail":true,"alwaysOutputData":false,"disabled":true,"onError":"continueErrorOutput"},{"parameters":{"jsonSchemaExample":"{\n  \"time_zone\": \"Europe/Paris\",\n  \"confidence\": 0.9,\n  \"present_like\": true,\n  \"reason\": \"Reason\"\n}","autoFix":true},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[-16,176],"id":"fcd20e5f-52ec-431d-968c-d784ad9de38a","name":"Structured Output Parser","disabled":true},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-16,384],"id":"6a00d6c3-99f1-4c7b-b07b-18e10837a7ec","name":"4.1","credentials":{"openAiApi":{"id":"JNBPFneOXwzjzSKh","name":"OpenAI account"}},"disabled":true},{"parameters":{"promptType":"define","text":"=Last messages (newest first): {{ JSON.stringify($('Aggregate').first().json.messages) }}","hasOutputParser":true,"options":{"systemMessage":"=You are a precise Time Zone Extractor. Decide the user’s CURRENT time zone from the messages. Only accept explicit present statements (“I’m in…”, “here in…”, “just landed…”, “back in…”). If the text is about planning, travel ideas, or future/past, return null.\n\nOutput JSON only:\n{\n  \"time_zone\": \"IANA or null\",\n  \"confidence\": 0.0-1.0,\n  \"present_like\": true|false,\n  \"reason\": \"short\"\n}\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-96,-48],"id":"6e3a6380-ec26-45c1-9eb0-51f96b4f3d2e","name":"LLM Verifier","disabled":true},{"parameters":{"operation":"executeQuery","query":"insert into public.tz_presence_cache\n  (user_id, tz, source, strength, observed_at, committed_at, last_checked_at, evidence_message_id, evidence_text, updated_at)\nvalues\n  ($1::text, $2::text, 'chat_explicit', $3::numeric, now(), now(), now(), null, $4::text, now())\non conflict (user_id) do update set\n  tz = excluded.tz,\n  source = excluded.source,\n  strength = excluded.strength,\n  observed_at = excluded.observed_at,\n  committed_at = excluded.committed_at,\n  last_checked_at = excluded.last_checked_at,\n  evidence_message_id = excluded.evidence_message_id,\n  evidence_text = excluded.evidence_text,\n  updated_at = now();\n","options":{"queryReplacement":"={{ [$('When Executed by Another Workflow').item.json.userId, $json.output.time_zone, $json.output.confidence, $json.output.reason] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[576,112],"id":"89ce06af-0552-4a16-96b0-376468cfedb7","name":"Upsert (Chat)","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"disabled":true},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{ $('Confident Output?').item.json.output.time_zone }}\",\n  \"confidence\": {{ $('Confident Output?').item.json.output.confidence }},\n  \"source\": \"chat_explicit\",\n  \"reason\": \"{{ $('Confident Output?').item.json.output.reason }}\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[800,112],"id":"63319cd7-322c-4189-bb87-3b11f5ed7d7b","name":"Set (Chat)","disabled":true},{"parameters":{"operation":"executeQuery","query":"insert into public.tz_presence_cache\n  (user_id, tz, source, strength, observed_at, committed_at, last_checked_at, updated_at)\nvalues\n  ($1::text, $2::text, 'calendar_setting', 0.6, now(), now(), now(), now())\non conflict (user_id) do update set\n  tz = excluded.tz,\n  source = excluded.source,\n  strength = excluded.strength,\n  observed_at = excluded.observed_at,\n  committed_at = excluded.committed_at,\n  last_checked_at = excluded.last_checked_at,\n  updated_at = now();","options":{"queryReplacement":"={{ [$('When Executed by Another Workflow').item.json.userId, $json.timeZone] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1024,432],"id":"377090fb-001b-4838-b599-082f74312a06","name":"Upsert (Calendar Settings)","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"disabled":true},{"parameters":{"operation":"executeQuery","query":"SELECT public.get_user_telegram_messages(\n  '{{ $(\"When Executed by Another Workflow\").item.json.userId }}',\n  8,\n  'inbound'\n) as messages;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1664,480],"id":"b1e36388-c026-4e63-b276-a8c35ee8e7f8","name":"Get Last N Messages","alwaysOutputData":true,"retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"disabled":true},{"parameters":{"aggregate":"aggregateAllItemData","destinationFieldName":"messages","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[-1216,368],"id":"1a3a78f4-ba5c-4bcf-b19b-cc91fa5a6523","name":"Aggregate","disabled":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"598c9c69-e75a-449e-a070-2df69dc89708","leftValue":"={{ $json.shouldCallLLM }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-768,368],"id":"8d096775-91a0-44d8-b303-c5446f0b5877","name":"Should Call LLM?","disabled":true},{"parameters":{"operation":"executeQuery","query":"select tz, strength, observed_at\nfrom public.tz_presence_cache\nwhere user_id = '{{ $('When Executed by Another Workflow').item.json.userId }}';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-544,512],"id":"1e8100cf-41c7-4d8d-bc33-08f0f205e4f9","name":"Get Cache","alwaysOutputData":true,"retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"disabled":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c3f6ba0e-a006-42c1-b766-70b5aba9026a","leftValue":"={{ $json.isNotEmpty() && $json.strength >= 0.6 && (Math.abs($json.observed_at.toDateTime().diffToNow('hours'))) <= 24 }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-320,512],"id":"c46a1bad-45d1-4d65-986b-a6a12cce54e2","name":"Use Cache?","disabled":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4d59c2e2-5e56-4fab-a8df-791763632dfb","leftValue":"={{ $json.isNotEmpty() }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1440,480],"id":"88c39099-0348-4b92-8a5e-8b32ba35d7be","name":"Messages?","disabled":true},{"parameters":{"operation":"executeQuery","query":"select tz, strength, observed_at\nfrom public.tz_presence_cache\nwhere user_id = '{{ $('When Executed by Another Workflow').item.json.userId }}';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-544,752],"id":"4a86af57-1e42-4502-a95a-bb6b76031dff","name":"Get Cache [No Messages]","alwaysOutputData":true,"retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"disabled":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c3f6ba0e-a006-42c1-b766-70b5aba9026a","leftValue":"={{ $json.isNotEmpty() && $json.strength >= 0.6 && (Math.abs($json.observed_at.toDateTime().diffToNow('hours'))) <= 24 }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-320,752],"id":"c849a3f8-591a-4ed6-ae8f-543bcd21c9f0","name":"Use Cache? [No Messages]","disabled":true},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{ $json.tz }}\",\n  \"confidence\": {{ $json.strength }},\n  \"source\": \"cache\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[16,560],"id":"79232c10-4ec1-4308-8957-f22ab87e6328","name":"Set (Cache)","disabled":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"043ca09e-4f59-4993-ad99-c2252254e300","leftValue":"={{ $json.output.present_like && $json.output.time_zone && $json.output.confidence >= 0.75}}","rightValue":0,"operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[352,160],"id":"c955cb80-aa69-46fb-a744-bb32d4eba8e5","name":"Confident Output?","disabled":true},{"parameters":{"jsCode":"// PresenceTrigger\nconst row = $input.first().json.messages[0] || {};\nconst txt = (row.text || \"\").toLowerCase();\n\nconst triggers = [\n  /\\b(i'?m|i am)\\s+in\\s+[a-z][a-z\\s\\-]{2,}/,\n  /\\b(here in|based in|staying in|living in)\\s+[a-z][a-z\\s\\-]{2,}/,\n  /\\b(just landed in|landed in|arrived in|back in)\\s+[a-z][a-z\\s\\-]{2,}/,\n  /\\b(now in)\\s+[a-z][a-z\\s\\-]{2,}/\n];\nconst futures = [/\\b(heading to|going to|will be in|tomorrow|next week)\\b/];\n\nconst shouldCallLLM = triggers.some(r => r.test(txt)) && !futures.some(r => r.test(txt));\nreturn [{ shouldCallLLM, lastMessageId: row.id, lastMessageText: row.text, lastTs: row.ts }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-992,368],"id":"36079d4c-bd8f-40b4-87bd-3fda0b1b2e2f","name":"Validate LLM Need","disabled":true},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{$('Get Time Zone from Primary Calendar').item.json.timeZone}}\",\n  \"confidence\": 0.6,\n  \"source\": \"calendar_setting\",\n  \"reason\": \"Falling back to Google Calendar account setting.\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1248,432],"id":"5102df08-56c4-4bcb-948f-b5e0445e0de5","name":"Set (Calendar Settings)","disabled":true},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"Etc/UTC\",\n  \"confidence\": 0.1,\n  \"source\": \"default\",\n  \"reason\": \"All other methods failed. Defaulting to UTC\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1024,624],"id":"595042b8-31ad-4ac9-8634-5b82a4bde725","name":"Set (UTC Default)"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Set (UTC Default)","type":"main","index":0}]]},"Get Token":{"main":[[{"node":"Get Time Zone from Primary Calendar","type":"main","index":0}]]},"Get Time Zone from Primary Calendar":{"main":[[{"node":"Upsert (Calendar Settings)","type":"main","index":0}],[{"node":"Set (UTC Default)","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"LLM Verifier","type":"ai_outputParser","index":0}]]},"4.1":{"ai_languageModel":[[{"node":"LLM Verifier","type":"ai_languageModel","index":0},{"node":"Structured Output Parser","type":"ai_languageModel","index":0}]]},"LLM Verifier":{"main":[[{"node":"Confident Output?","type":"main","index":0}]]},"Upsert (Chat)":{"main":[[{"node":"Set (Chat)","type":"main","index":0}]]},"Upsert (Calendar Settings)":{"main":[[{"node":"Set (Calendar Settings)","type":"main","index":0}]]},"Get Last N Messages":{"main":[[{"node":"Messages?","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Validate LLM Need","type":"main","index":0}]]},"Should Call LLM?":{"main":[[{"node":"LLM Verifier","type":"main","index":0}],[{"node":"Get Cache","type":"main","index":0}]]},"Get Cache":{"main":[[{"node":"Use Cache?","type":"main","index":0}]]},"Use Cache?":{"main":[[{"node":"Set (Cache)","type":"main","index":0}],[{"node":"LLM Verifier","type":"main","index":0}]]},"Messages?":{"main":[[{"node":"Aggregate","type":"main","index":0}],[{"node":"Get Cache [No Messages]","type":"main","index":0}]]},"Get Cache [No Messages]":{"main":[[{"node":"Use Cache? [No Messages]","type":"main","index":0}]]},"Use Cache? [No Messages]":{"main":[[{"node":"Set (Cache)","type":"main","index":0}],[{"node":"Get Token","type":"main","index":0}]]},"Confident Output?":{"main":[[{"node":"Upsert (Chat)","type":"main","index":0}],[{"node":"Get Token","type":"main","index":0}]]},"Validate LLM Need":{"main":[[{"node":"Should Call LLM?","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"When Executed by Another Workflow":[{"json":{"userId":"t07ZDdtiVLduDE3RuRHGKowoSd0f"}}],"LLM Verifier":[{"json":{"output":{"time_zone":"Europe/Paris","confidence":1,"present_like":true,"reason":"User explicitly stated 'I'm actually in France' and 'just landed in Paris' in the most recent messages."}}}]},"versionId":"ec89b699-e65a-45da-b794-98a33a8f6a95","triggerCount":0,"shared":[{"updatedAt":"2025-10-28T17:41:29.101Z","createdAt":"2025-10-28T17:41:29.101Z","role":"workflow:owner","workflowId":"d7PDXuxH12xsDziS","projectId":"8nyfoRCh3nEYWaKJ"}],"tags":[]}
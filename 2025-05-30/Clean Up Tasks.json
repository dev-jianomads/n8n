{"createdAt":"2025-04-28T19:45:30.725Z","updatedAt":"2025-05-20T22:33:12.000Z","id":"77WdGsD2qNaz0Oaq","name":"Clean Up Tasks","active":true,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-680,-120],"id":"51559840-f0a5-4984-8dae-915ccbae5e46","name":"When clicking ‘Test workflow’"},{"parameters":{"operation":"getAll","tableId":"emails","returnAll":true,"matchType":"allFilters","filters":{"conditions":[{"keyName":"user_id","condition":"eq","keyValue":"={{ $json.id }}"},{"keyName":"sender_email","condition":"eq","keyValue":"={{ $json.email }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-240,-120],"id":"cdf32c99-8189-4d9e-81eb-0cd5d1f0cc74","name":"Get Emails Where Sender = Recipient","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"operation":"delete","tableId":"tasks","filters":{"conditions":[{"keyName":"email_id","condition":"eq","keyValue":"={{ $json.email_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[58,-120],"id":"41bfe47d-c661-4d10-92c5-ef26d17c19f6","name":"Delete Tasks From Self Sent Emails","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"content":"This path deletes all tasks extracted from emails sent to each user to themselves.","height":280,"width":600},"type":"n8n-nodes-base.stickyNote","position":[-340,-240],"typeVersion":1,"id":"f2a57d83-7e51-4f08-af7f-0de9e535ff8f","name":"Sticky Note"},{"parameters":{"operation":"getAll","tableId":"emails","returnAll":true,"matchType":"allFilters","filters":{"conditions":[{"keyName":"user_id","condition":"eq","keyValue":"={{ $json.id }}"},{"keyName":"cc_emails","condition":"ilike","keyValue":"=*{{ $json.email }}*"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-240,80],"id":"7b6c5968-7f99-489a-9535-d0f7483f516f","name":"Get User Emails Where They're in CC'd","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4.1-mini-2025-04-14","mode":"list","cachedResultName":"GPT-4.1-MINI-2025-04-14"},"messages":{"values":[{"content":"=You are a precise name detection agent.  \nYour sole task is to check if a user is **explicitly mentioned** in an email body.\n\n- You will be given the user's name and the email body.\n- Account for common variations, nicknames, and shortenings of the name (e.g., Charles → Charlie, Kevin → Kev, etc.).\n- Only answer with exactly **YES** or **NO** — nothing else.\n- Assume the email is in English.\n\n# Input format:\n- **User Name**: `<full name>`\n- **Email Body**: `<email text>`\n\n# Output:\n- **YES** if the user or a variation of their name is explicitly mentioned.\n- **NO** otherwise.\n\n# Important:\n- If you are not sure, default to **NO**.\n- Do not infer or guess based on vague mentions.\n\n# Examples:\n\n**Example 1**  \nUser Name: Kevin Johnson  \nEmail Body: \"Hey Kev, can you review the latest report?\"  \nOutput: YES\n\n**Example 2**  \nUser Name: Charles Smith  \nEmail Body: \"Charlie was amazing on the project last week.\"  \nOutput: YES\n\n**Example 3**  \nUser Name: Michael Brown  \nEmail Body: \"The entire team did great.\"  \nOutput: NO\n\n**Example 4**  \nUser Name: Elizabeth Taylor  \nEmail Body: \"Liz, please check the figures by noon.\"  \nOutput: YES\n\n**Example 5**  \nUser Name: Robert King  \nEmail Body: \"Looking forward to seeing everyone at the party!\"  \nOutput: NO","role":"system"},{"content":"=User Name:{{ $('Get Users').item.json.display_name }}\n\nEmail Body: {{ $json.body }}"}]},"options":{"maxTokens":8,"temperature":0}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-20,80],"id":"7f7f5618-0e9d-4168-a5e7-ed3095876013","name":"Search for Mentions","credentials":{"openAiApi":{"id":"hyDTTerH5EyySsq0","name":"OpenAi account"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.content.toLowerCase() }}","rightValue":"yes","operator":{"type":"string","operation":"equals"},"id":"2523f460-ed4d-43a8-b851-5b45a571b1db"}],"combinator":"and"},"renameOutput":true,"outputKey":"YES"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d19ad80d-9ad9-4be5-9ddd-7836870e992f","leftValue":"={{ $json.message.content.toLowerCase() }}","rightValue":"no","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"NO"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[356,80],"id":"071492f0-2659-491b-8b00-83f9e4252017","name":"Switch"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"GPT-4.1"},"messages":{"values":[{"content":"=You are a relevance classification agent.  \nYour job is to decide if an email is **RELEVANT** or **IRRELEVANT** to a user who was CC'd into the email.\n\n# Decision Checklist:\n- **Relevant (YES)** if:\n  - The email clearly asks **all recipients** to take action (e.g., \"Everyone must...\", \"All, please...\").\n- **Irrelevant (NO)** if:\n  - The email is purely informational (e.g., announcements, reminders).\n  - The email is a conversation between others where the user is just CC'd for visibility.\n- If unsure, **default to NO**.\n\n# Output:\nRespond only with **YES** or **NO**.\n\n# Few-shot Examples:\n\n**Example 1**  \nEmail: \"Hi Team, please review the attached document before Monday.\"  \nOutput: YES\n\n**Example 2**  \nEmail: \"Reminder: Our office will be closed next Friday.\"  \nOutput: NO\n\n**Example 3**  \nEmail: \"All employees must update their passwords by Friday.\"  \nOutput: YES\n\n**Example 4**  \nEmail: \"FYI: Q1 sales results attached.\"  \nOutput: NO\n\n**Example 5**  \nEmail: \"Hi John, can you update the report? (CC: Kevin for visibility)\"  \nOutput: NO\n\n**Example 6**  \nEmail: \"Everyone — please submit your expense reports by Friday.\"  \nOutput: YES\n\n---\n\n**Summary for agent**:  \n> Only say YES if clear action is asked from *everyone*. Otherwise, say NO.","role":"system"},{"content":"=EMAIL: {{ $('Get User Emails Where They\\'re in CC\\'d').item.json.body }}"}]},"options":{"maxTokens":8,"temperature":0}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[576,155],"id":"2905d41e-e687-4e7b-a5d4-cc0f28f6a6f7","name":"Relevant still?","credentials":{"openAiApi":{"id":"hyDTTerH5EyySsq0","name":"OpenAi account"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.content.toLowerCase() }}","rightValue":"yes","operator":{"type":"string","operation":"equals"},"id":"2523f460-ed4d-43a8-b851-5b45a571b1db"}],"combinator":"and"},"renameOutput":true,"outputKey":"YES"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d19ad80d-9ad9-4be5-9ddd-7836870e992f","leftValue":"={{ $json.message.content.toLowerCase() }}","rightValue":"no","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"NO"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[952,155],"id":"cc8909b8-7bfb-4f01-900a-dadc9d34a5cb","name":"Switch1"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1172,-20],"id":"c1e0691f-8762-4886-806a-ceab1309dda5","name":"No Operation, do nothing1"},{"parameters":{"operation":"delete","tableId":"tasks","filters":{"conditions":[{"keyName":"email_id","condition":"eq","keyValue":"={{ $(`Get User Emails Where They're in CC'd`).item.json.email_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1172,205],"id":"45e70da8-b917-4b0f-9d6b-92994691e8b4","name":"Delete Tasks From CC'd Emails","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":3}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-680,80],"id":"7069f15d-404d-4f8c-9419-1839b8ff47f5","name":"Schedule Trigger"},{"parameters":{"operation":"executeQuery","query":"SELECT id, email, display_name\nFROM users","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-460,-20],"id":"d5a7fcd3-c4e5-47fc-8c4b-d2166f7b674e","name":"Get Users","credentials":{"postgres":{"id":"kI6uSN0fI2Vhpmlk","name":"Postgres account"}}}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"Get Users","type":"main","index":0}]]},"Get Emails Where Sender = Recipient":{"main":[[{"node":"Delete Tasks From Self Sent Emails","type":"main","index":0}]]},"Get User Emails Where They're in CC'd":{"main":[[{"node":"Search for Mentions","type":"main","index":0}]]},"Search for Mentions":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Switch":{"main":[[{"node":"No Operation, do nothing1","type":"main","index":0}],[{"node":"Relevant still?","type":"main","index":0}]]},"Relevant still?":{"main":[[{"node":"Switch1","type":"main","index":0}]]},"Switch1":{"main":[[{"node":"No Operation, do nothing1","type":"main","index":0}],[{"node":"Delete Tasks From CC'd Emails","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Get Users","type":"main","index":0}]]},"Get Users":{"main":[[{"node":"Get User Emails Where They're in CC'd","type":"main","index":0},{"node":"Get Emails Where Sender = Recipient","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"3DwlFyiaSzmnZPkS"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[15]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ee54d635-d42e-4c24-a085-d8ec7ee7604d","triggerCount":1,"tags":[]}
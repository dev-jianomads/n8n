{"createdAt":"2025-06-03T14:40:27.492Z","updatedAt":"2025-06-03T14:40:45.210Z","id":"esyzlKEmnRcCbmGs","name":"Find Date Range","active":false,"isArchived":false,"nodes":[{"parameters":{"modelId":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"GPT-4.1"},"messages":{"values":[{"content":"=You are an expert assistant in scheduling meetings. You will be given:\n\nThe current date (i.e., \"today's date\").\nThe recipient's time zone.\nThe text of an email thread or meeting request.\n\nYour task is to:\n\n* Extract potential date/time ranges from the email content, interpreting them in the recipient's time zone.\n* If multiple date/time ranges are suggested, pick the earliest one.\n* If the email is vague and says, for example, \"anytime next week,\" assume Monday of the upcoming week (in the recipient's time zone).\n* If no explicit or implicit time range is found, default to tomorrow from 9 AM to 6 PM in the recipient's time zone.\n* The default duration is 60 minutes, unless explicitly stated otherwise in the email body.\n* Output only a valid JSON object with the following format:\n\n{\n  \"start\": \"YYYY-MM-DDTHH:MM:SS±HH:MM\",\n  \"end\": \"YYYY-MM-DDTHH:MM:SS±HH:MM\",\n  \"duration\": number_of_minutes\n}\n\nWhere:\n\n* \"start\" is the chosen meeting start time in ISO 8601 format (with the local time offset).\n* \"end\" is the chosen meeting end time in ISO 8601 format (with the local time offset).\n* \"duration\" is the integer representing how many minutes the meeting should last.\n\n## Important details and clarifications:\n\n* Convert all times to the recipient's time zone (e.g., Australia/Sydney).\n* \"Today's date\" is provided so you can interpret references like \"tomorrow,\" \"next week,\" etc.\n* If a partial time range is given (e.g., \"morning,\" \"afternoon,\" \"evening\"), you should do your best to pick a standard assumption (e.g., morning could be 10 AM, afternoon could be 2 PM, evening could be 6 PM, etc.)—whatever best fits the schedule constraints.\n* If the email says something like \"Tuesday evening or Wednesday morning,\" choose the earliest possible time in the future (Tuesday evening in this example).\n* If you cannot confidently extract a time range from the text, default to tomorrow from 9 AM to 6 PM.\n* If there is a mention of duration in the email (e.g., \"a 90-minute call\"), adjust the duration accordingly.\n* Only return a JSON object with keys start, end, and duration; do not add or modify any other fields in the output.\n\n## Additional instructions to ensure the user's local timezone is always returned:\n\n1. Always interpret all dates and times in the user’s specified time zone.\n2. When returning the final JSON object, make sure the \"start\" and \"end\" fields include the correct offset for the user’s time zone in ISO 8601 format.\n3. If no user time zone is specified, default to a known or requested time zone (e.g., UTC).\n4. Never alter or ignore the user-provided time zone—use it verbatim and keep it consistent throughout the response.","role":"system"},{"content":"=Today's date: 2025-01-22\nTime zone: Australia/Sydney\nEmail body: Are you free tomorrow at 10 AM? I only need 30 minutes."},{"content":"{\"start\": \"2025-01-23T10:00:00+11:00\", \"end\": \"2025-01-23T10:30:00+11:00\", \"duration\": 30}","role":"assistant"},{"content":"Today's date: 2025-01-25\nTime zone: Australia/Sydney\nEmail body: We could meet next Tuesday or next Thursday, 1 hour each, whichever is earlier."},{"content":"{\"start\": \"2025-01-28T09:00:00+11:00\", \"end\": \"2025-01-28T10:00:00+11:00\", \"duration\": 60}","role":"assistant"},{"content":"Today's date: 2025-01-22\nTime zone: Australia/Sydney\nEmail body: Hey, let's meet sometime next week. I have plenty of availability—any day works. \nI think 30 minutes should be enough."},{"content":"{\"start\": \"2025-01-27T09:00:00+11:00\",\"end\": \"2025-01-27T09:30:00+11:00\", \"duration\": 30}","role":"assistant"},{"content":"Today's date: 2025-01-23\nTime zone: Australia/Sydney\nEmail body: I'm not sure when we can meet, but let's try something soon."},{"content":"{\"start\": \"2025-01-24T09:00:00+11:00\",\"end\": \"2025-01-24T10:00:00+11:00\",\"duration\": 60}","role":"assistant"},{"content":"=Today's date: {{ $now.toUTC().toISO() }}\n\nTime zone: {{ $json.timeZone }}\n\nEmail Body: {{ $json.body }}"}]},"jsonOutput":true,"options":{"maxTokens":512,"temperature":0.2}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[220,0],"id":"de30dbd8-71fa-471a-82ea-496165b3e889","name":"Date Range Finder","credentials":{"openAiApi":{"id":"JNBPFneOXwzjzSKh","name":"OpenAi account"}}},{"parameters":{"workflowInputs":{"values":[{"name":"timeZone"},{"name":"body"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"ae1816b4-d29e-4a17-9f00-8d40da584a18","name":"When Executed by Another Workflow"},{"parameters":{"mode":"raw","jsonOutput":"={{ JSON.stringify($json.message.content) }}","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[600,0],"id":"741f5b83-8071-4c43-96de-e233d4e59d4d","name":"Return Response"}],"connections":{"Date Range Finder":{"main":[[{"node":"Return Response","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Date Range Finder","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"5628586b-fd1a-47e8-a7e2-61c2ff6e65be","triggerCount":0,"shared":[{"createdAt":"2025-06-03T14:40:27.492Z","updatedAt":"2025-06-03T14:40:27.492Z","role":"workflow:owner","workflowId":"esyzlKEmnRcCbmGs","projectId":"8nyfoRCh3nEYWaKJ"}],"tags":[]}
{"createdAt":"2025-05-29T16:22:56.635Z","updatedAt":"2025-06-30T01:58:29.298Z","id":"rzWrvWkl4FPQEOeD","name":"2. Extract Tasks from Email","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowId":{"__rl":true,"value":"5nLuIwEVYbgbkXK2","mode":"list","cachedResultName":"Get Token"},"workflowInputs":{"mappingMode":"defineBelow","value":{"user_id":"={{ $json.userId }}"},"matchingColumns":["user_id"],"schema":[{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-4460,380],"id":"754995d3-dc77-4c63-90ef-42f62652fca1","name":"Get Token and User","retryOnFail":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"3c949b9c-8f9a-4bf8-909f-a6a4db374962","leftValue":"={{ $json.count }}","rightValue":0,"operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-3580,380],"id":"6c41d893-7bba-480b-9d38-a22c86bfccba","name":"Exists?"},{"parameters":{"url":"=https://www.googleapis.com/gmail/v1/users/me/messages/{{ $('Set Params').item.json.emailId }}","sendQuery":true,"queryParameters":{"parameters":[{"name":"format","value":"full"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get Token and User').item.json.accessToken }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-3360,380],"id":"5ba25a85-dbba-4eed-bb47-a9c7b2be7d2d","name":"Get Full Gmail Email","retryOnFail":true,"maxTries":5,"waitBetweenTries":1500},{"parameters":{"jsCode":"// This code runs in an n8n Code node (JavaScript)\n// It decodes the email body from Gmail API's multipart response\n\nfunction findBody(part, preferredMimeTypes = ['text/plain', 'text/html']) {\n  if (preferredMimeTypes.includes(part.mimeType) && part.body?.data) {\n    return {\n      mimeType: part.mimeType,\n      data: part.body.data,\n    };\n  }\n\n  if (part.parts) {\n    for (const subpart of part.parts) {\n      const result = findBody(subpart, preferredMimeTypes);\n      if (result) return result;\n    }\n  }\n\n  return null;\n}\n\nreturn items.map(item => {\n  const payload = item.json.payload;\n  const bodyData =\n    payload.body?.data || // Single-part email\n    findBody(payload)?.data;\n\n  if (!bodyData) {\n    item.json.decodedBody = 'No email body found.';\n    return item;\n  }\n\n  // Gmail uses base64url encoding\n  const base64 = bodyData.replace(/-/g, '+').replace(/_/g, '/');\n  const buffer = Buffer.from(base64, 'base64');\n  const decoded = buffer.toString('utf8');\n\n  item.json.decodedBody = decoded;\n  return item;\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3140,380],"id":"2cff4ecb-0115-402c-83e0-5900cec0f3e9","name":"Decode Email Body"},{"parameters":{"jsCode":"// n8n JavaScript Code node version of looks_like_promotion()\n\nreturn items.map(item => {\n  const headers = item.json.payload?.headers || [];\n\n  // Convert header names to lowercase\n  const headerKeys = new Set(headers.map(h => h.name.toLowerCase()));\n\n  // Check for promotional indicators\n  const isPromotion =\n    headerKeys.has('list-unsubscribe') ||\n    headerKeys.has('precedence') ||\n    headerKeys.has('auto-submitted');\n\n  // Add a new field to the item\n  item.json.isPromotion = isPromotion;\n  return item;\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2920,380],"id":"eacff5e5-4b6b-4f4c-a7c9-8a8c2e6534a2","name":"Check if it is Promotion"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"300885a6-4a10-4fc5-8378-017b88c4bcab","leftValue":"={{ $json.isPromotion }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2700,380],"id":"c7a11dda-a3c2-4816-af47-146a1e7d04f7","name":"Promotion?"},{"parameters":{"jsCode":"const parseAddress = (raw) => {\n  if (!raw || typeof raw !== 'string') return { name: '', email: '' };\n\n  const match = raw.match(/(.*)?<(.+)>/);\n  if (match) {\n    const name = match[1]?.trim().replace(/(^\"|\"$)/g, '') || '';\n    const email = match[2]?.trim().toLowerCase();\n    return { name, email };\n  } else {\n    return { name: '', email: raw.trim().toLowerCase() };\n  }\n};\n\nconst getHeader = (headers, name) => {\n  if (!Array.isArray(headers)) return null;\n  const match = headers.find(h => h.name?.toLowerCase() === name.toLowerCase());\n  return match?.value || null;\n};\n\nconst extractNameFromEmail = (email) => {\n  if (!email || typeof email !== 'string') return '';\n  const name = email.split('@')[0];\n  return name || '';\n};\n\nreturn items.map(item => {\n  const email = item.json || {};\n  const headers = email.payload?.headers || [];\n\n  const senderRaw = getHeader(headers, 'From');\n  if (!senderRaw) {\n    item.json.error = 'Missing \"From\" header';\n    return item;\n  }\n\n  let { name: senderName, email: senderEmail } = parseAddress(senderRaw);\n\n  // Additional fallback parsing\n  if (!senderName || !senderEmail) {\n    const rawSenderParts = senderRaw.split('<');\n    if (!senderName && rawSenderParts.length > 0) {\n      senderName = rawSenderParts[0]?.trim() || '';\n    }\n\n    if (!senderEmail && rawSenderParts.length >= 2) {\n      senderEmail = rawSenderParts[1].replace('>', '').trim().toLowerCase();\n    }\n  }\n\n  // Last resort fallback\n  if (!senderName) {\n    senderName = extractNameFromEmail(senderEmail);\n    if (senderName.trim().toLowerCase() === 'none') {\n      senderName = extractNameFromEmail(senderEmail);\n    }\n  }\n\n  // To\n  const toRaw = getHeader(headers, 'To');\n  const recipientEmails = toRaw\n    ? toRaw.split(',').map(a => parseAddress(a).email).filter(Boolean)\n    : [];\n\n  // Cc\n  const ccRaw = getHeader(headers, 'Cc');\n  const ccEmails = ccRaw\n    ? ccRaw.split(',').map(a => parseAddress(a).email).filter(Boolean)\n    : [];\n\n  // Date\n  const dateRaw = getHeader(headers, 'Date');\n  let parsedDate;\n  try {\n    parsedDate = dateRaw ? new Date(dateRaw) : new Date();\n    if (isNaN(parsedDate.getTime())) throw new Error('Invalid date');\n  } catch {\n    parsedDate = new Date(); // fallback to current time\n  }\n\n  // Subject\n  const subject = getHeader(headers, 'Subject') || '';\n\n  // IDs\n  const messageId = email.id || '';\n  const threadId = email.threadId || '';\n\n  item.json.sender_email = senderEmail || '';\n  item.json.sender_name = senderName || '';\n  item.json.sender_raw = senderRaw;\n\n  item.json.recipient_emails = recipientEmails.map(e => e.toLowerCase().trim());\n  item.json.cc_emails = ccEmails.map(e => e.toLowerCase().trim());\n  item.json.subject = subject;\n  item.json.date = parsedDate.toISOString();\n  item.json.message_id = messageId;\n  item.json.thread_id = threadId;\n\n  item.json.original_email_link = messageId\n    ? `https://mail.google.com/mail/u/0/#inbox/${messageId}`\n    : null;\n\n  item.json.ios_email_link = messageId\n    ? `googlegmail://co?search=inbox&query=${messageId}`\n    : null;\n\n  return item;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2480,380],"id":"3eea9dc9-bf0c-4558-9332-5eeb390318bb","name":"Extract Relevant Email Parts"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7ddd0905-4d0f-46a2-ad55-ed8d42f084f8","leftValue":"={{ $('Extract Relevant Email Parts').item.json.recipient_emails }}","rightValue":"={{ $('Get Token and User').item.json.user.email }}","operator":{"type":"array","operation":"notContains","rightType":"any"}},{"id":"cab9f7e3-60a6-4052-a68c-bfac9058695d","leftValue":"={{ $('Extract Relevant Email Parts').item.json.cc_emails }}","rightValue":"={{ $('Get Token and User').item.json.user.email }}","operator":{"type":"array","operation":"notContains","rightType":"any"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1600,380],"id":"092fa6f8-0012-4a3d-8707-559f4f7410f7","name":"Email Not Intended for User?"},{"parameters":{"workflowId":{"__rl":true,"value":"TlmZyDGCeIR42mFf","mode":"list","cachedResultName":"ðŸ¤– Isolate Email"},"workflowInputs":{"mappingMode":"defineBelow","value":{"body":"={{ $json.decodedBody }}"},"matchingColumns":["body"],"schema":[{"id":"body","displayName":"body","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-1380,380],"id":"3bd2432d-6565-4c22-9ed7-153f4cbd19b1","name":"Isolate Email Data"},{"parameters":{"assignments":{"assignments":[{"id":"2d929cf5-9529-405c-92fa-a483ebe2540d","name":"isolatedBody","value":"={{ $json.isolatedBody.replaceAll(\"## Email Body: \", \"\") }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1160,380],"id":"8aa1cc89-4343-42e6-8f38-cd900cfc5024","name":"Clean Email Body"},{"parameters":{"workflowId":{"__rl":true,"value":"6iEsc0mXqPkcn4aa","mode":"list","cachedResultName":"ðŸ¤– Markdownify Email Body"},"workflowInputs":{"mappingMode":"defineBelow","value":{"body":"={{ $json.isolatedBody }}"},"matchingColumns":["body"],"schema":[{"id":"body","displayName":"body","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-940,380],"id":"2f6ff444-26e8-4d1e-9049-04a6ecade11c","name":"Markdownify Body"},{"parameters":{"workflowId":{"__rl":true,"value":"JAyl1FPmU3Cqj8PE","mode":"list","cachedResultName":"ðŸ¤– Summarize Email"},"workflowInputs":{"mappingMode":"defineBelow","value":{"body":"={{ $('Clean Email Body').item.json.isolatedBody }}"},"matchingColumns":["body"],"schema":[{"id":"body","displayName":"body","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-720,380],"id":"7973dc31-1c09-4801-9c59-f3014aef61e9","name":"Summarize Email"},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"sender_email"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[-60,380],"id":"fc6e00a2-b31d-4d58-9875-8cb2b5931e4f","name":"Aggregate"},{"parameters":{"assignments":{"assignments":[{"id":"fa76dd85-6dfe-4f74-8745-e79808ed67bc","name":"relevantSenders","value":"={{ $json.sender_email }}","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[160,380],"id":"e0a3c986-17d5-47a7-ae90-08bbc8fcb7bb","name":"Set Relevant Senders"},{"parameters":{"assignments":{"assignments":[{"id":"7eb451d8-d8a2-447c-8244-1cb4015b1238","name":"relevant","value":true,"type":"boolean"},{"id":"b7c6579f-e633-4a7f-8606-74fcfff74209","name":"explanation","value":"There are previous tasks extracted from emails sent by this sender.","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[600,280],"id":"4f69f838-69e0-4476-b684-e1351dada2ec","name":"Set Relevance"},{"parameters":{"workflowId":{"__rl":true,"value":"OGlzylPN2T4ZSIbw","mode":"list","cachedResultName":"ðŸ¤– Classify Email Relevance"},"workflowInputs":{"mappingMode":"defineBelow","value":{"isCc":"={{ \n  ($('Extract Relevant Email Parts').item.json.cc_emails ?? []).includes($('Get Token and User').item.json.user.email) }}","sender":"={{ $('Extract Relevant Email Parts').item.json.sender_raw }}","recipient":"={{ $('Get Token and User').item.json.user.email }}","recipientName":"={{ $('Get Token and User').item.json.user.display_name }}","body":"={{ $('Clean Email Body').item.json.isolatedBody }}"},"matchingColumns":[],"schema":[{"id":"isCc","displayName":"isCc","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"boolean"},{"id":"sender","displayName":"sender","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"recipient","displayName":"recipient","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"recipientName","displayName":"recipientName","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"body","displayName":"body","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[600,480],"id":"0cd02eb1-a578-4f64-b872-18dc79a97838","name":"Classify Email"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a79af1b8-2e35-4435-be5e-a83463e72464","leftValue":"={{ $json.sender_name }}","rightValue":"","operator":{"type":"string","operation":"notExists","singleValue":true}},{"id":"b6e17771-cd61-4bfb-964e-f53495ca8193","leftValue":"={{ $json.sender_name }}","rightValue":"","operator":{"type":"string","operation":"empty","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2260,380],"id":"6eac998d-5564-4a1e-a974-d7864dfcaa96","name":"Sender Name Empty?"},{"parameters":{"workflowId":{"__rl":true,"value":"8QMz7slg4GzUPTjc","mode":"list","cachedResultName":"ðŸ¤– Extract Name"},"workflowInputs":{"mappingMode":"defineBelow","value":{"body":"={{ $('Extract Relevant Email Parts').item.json.sender_email }}"},"matchingColumns":["body"],"schema":[{"id":"body","displayName":"body","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-2040,305],"id":"bdcd9d59-94a2-4ce5-a3eb-1afde6db0ba9","name":"Extract Sender Name"},{"parameters":{"assignments":{"assignments":[{"id":"4248d748-e0f3-4d71-a9ea-93718d6b0298","name":"sender_name","value":"={{ $json.sender_name ?? $('Extract Sender Name').senderName }}","type":"string"}]},"includeOtherFields":true,"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1820,380],"id":"31855e2d-5e02-4f6c-a310-dba5593f4751","name":"Set Sender Name"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8f1f659a-4b65-4bed-b2ab-f46165799ae2","leftValue":"={{ $json.relevantSenders }}","rightValue":"={{ $('Extract Relevant Email Parts').item.json.sender_email }}","operator":{"type":"array","operation":"contains","rightType":"any"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[380,380],"id":"069b8f0a-bafe-45d4-8bfe-915389651fa4","name":"If sender is relevant?"},{"parameters":{"workflowId":{"__rl":true,"value":"A3idqBR2QBYnjAwR","mode":"list","cachedResultName":"Upsert Email Thread"},"workflowInputs":{"mappingMode":"defineBelow","value":{"newEmailBody":"={{ $('Clean Email Body').item.json.isolatedBody }}","threadId":"={{ $('Get Full Gmail Email').item.json.threadId }}","newEmailDateReceived":"={{ $('Extract Relevant Email Parts').item.json.date }}"},"matchingColumns":[],"schema":[{"id":"threadId","displayName":"threadId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"newEmailBody","displayName":"newEmailBody","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"newEmailDateReceived","displayName":"newEmailDateReceived","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-500,380],"id":"708ddbd8-d869-4a0b-bd3b-78e819994a32","name":"Upsert Email Thread","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0577aa2e-884a-468c-8181-c642b94df437","leftValue":"={{ $json.insertedEmail.relevant }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}},{"id":"82721e74-9c0c-40f0-995c-89abd582d891","leftValue":"={{ $json.insertedEmail.sender_email }}","rightValue":"={{$('Get Token and User').item.json.user.email }}","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1700,380],"id":"598f8e33-8210-4f1f-96f4-9c71bdcdaa46","name":"Relevant?"},{"parameters":{"workflowId":{"__rl":true,"value":"hP5sYnXKqZHAcYaY","mode":"list","cachedResultName":"3. Create Tasks from Email"},"workflowInputs":{"mappingMode":"defineBelow","value":{"email":"={{ $('Set Inserted Email').item.json.insertedEmail }}","user":"={{ $('Get Token and User').item.json.user }}"},"matchingColumns":[],"schema":[{"id":"email","displayName":"email","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"object"},{"id":"user","displayName":"user","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"object"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":false}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[1920,380],"id":"d8dc167e-d7cf-46c5-a1ea-905bacd1cba5","name":"Extract and Process Tasks","alwaysOutputData":true},{"parameters":{"operation":"executeQuery","query":"SELECT COUNT(*)\nFROM \"public\".\"emails\"\nWHERE email_id = '{{ $('Set Params').item.json.emailId }}'\nAND user_id = '{{ $json.user.id }}'","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-4240,380],"id":"339269d0-80e1-44d8-8b1b-b5ae0db6c956","name":"Check if Email Exists in User Inbox","retryOnFail":false,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"executeQuery","query":"SELECT DISTINCT(e.sender_email)\nFROM \"public\".\"emails\" AS e, \"public\".\"tasks\" AS t\nWHERE e.id = t.extracted_from_id\nAND e.user_id = t.user_id\nAND t.user_id = '{{ $('Set Params').item.json.userId }}'\nAND t.progress IS NOT NULL\nAND t.progress <> ''\nAND e.sender_email <> ''","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-280,380],"id":"ba5826ad-a9e3-415f-82c8-829c546bf190","name":"Find Relevant Sender Emails","alwaysOutputData":true,"retryOnFail":true,"maxTries":5,"waitBetweenTries":5000,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"workflowInputs":{"values":[{"name":"userId"},{"name":"emailId"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-4900,380],"id":"d14d8dc1-c517-4834-bd5b-f8726644167a","name":"When Executed by Another Workflow"},{"parameters":{"assignments":{"assignments":[{"id":"da75fc1f-a8f1-4d70-91ea-c0edaad3dd9b","name":"userId","value":"={{ $json.userId ?? $json.content.userId }}","type":"string"},{"id":"a61a57a0-8ef9-46e3-9e31-902b7b185478","name":"emailId","value":"={{ $json.emailId ?? $json.content.emailId }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-4680,380],"id":"a7ea1016-f191-430f-a392-905b50fb6706","name":"Set Params"},{"parameters":{"schema":{"__rl":true,"value":"public","mode":"list","cachedResultName":"public"},"table":{"__rl":true,"value":"emails","mode":"list","cachedResultName":"emails"},"columns":{"mappingMode":"defineBelow","value":{"relevant":"={{ $json.relevant }}","summary":"={{ $('Summarize Email').item.json.body }}","subject":"={{ $('Extract Relevant Email Parts').item.json.subject }}","user_id":"={{ $('Get Token and User').item.json.user.id }}","body":"={{ $('Markdownify Body').item.json.body }}","original_link":"={{ $('Extract Relevant Email Parts').item.json.original_email_link }}","ios_link":"={{ $('Extract Relevant Email Parts').item.json.ios_email_link }}","cc_emails":"={{ $('Extract Relevant Email Parts').item.json.cc_emails.join(\",\") }}","recipient_emails":"={{ $('Extract Relevant Email Parts').item.json.recipient_emails.join(\",\") }}","relevance_explanation":"={{ $json.explanation }}","sender":"={{ $('Extract Relevant Email Parts').item.json.sender_raw }}","sender_email":"={{ $('Extract Relevant Email Parts').item.json.sender_email }}","sender_name":"={{ $('Set Sender Name').item.json.sender_name }}","email_id":"={{ $('Get Full Gmail Email').item.json.id }}","date_received":"={{ $('Extract Relevant Email Parts').item.json.date }}","thread_id":"={{ $('Upsert Email Thread').item.json.threadId }}"},"matchingColumns":["id"],"schema":[{"id":"email_id","displayName":"email_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true},{"id":"summary","displayName":"summary","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"original_link","displayName":"original_link","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"sender","displayName":"sender","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"subject","displayName":"subject","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"date_received","displayName":"date_received","required":true,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true},{"id":"user_id","displayName":"user_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"sender_name","displayName":"sender_name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"sender_email","displayName":"sender_email","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"thread_id","displayName":"thread_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"body","displayName":"body","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"relevant","displayName":"relevant","required":false,"defaultMatch":false,"display":true,"type":"boolean","canBeUsedToMatch":true},{"id":"ios_link","displayName":"ios_link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"html_body","displayName":"html_body","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"attachments_metadata","displayName":"attachments_metadata","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":true},{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"relevance_explanation","displayName":"relevance_explanation","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"cc_emails","displayName":"cc_emails","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"recipient_emails","displayName":"recipient_emails","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1040,380],"id":"396d7cc0-ac9b-4129-b58f-aaefe94fd33a","name":"Insert Email","credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"getAll","tableId":"emails","returnAll":true,"matchType":"allFilters","filters":{"conditions":[{"keyName":"email_id","condition":"eq","keyValue":"={{ $('Set Params').item.json.emailId }}"},{"keyName":"user_id","condition":"eq","keyValue":"={{ $('Get Token and User').item.json.user.id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-4020,455],"id":"f052c618-0e4f-40d3-8a29-b3cbe8ce420c","name":"Get Matches","alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"assignments":{"assignments":[{"id":"aaecb479-c88a-4f26-9793-a2f3d4d991ec","name":"count","value":"={{ Object.keys($json).length }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-3800,455],"id":"e52240c9-89ac-4347-ac33-8b80d970c4a6","name":"Set Count"},{"parameters":{"tableId":"emails","fieldsUi":{"fieldValues":[{"fieldId":"email_id","fieldValue":"={{ $('Get Full Gmail Email').item.json.id }}"},{"fieldId":"summary","fieldValue":"={{ $('Summarize Email').item.json.body }}"},{"fieldId":"original_link","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.original_email_link }}"},{"fieldId":"sender","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.sender_raw }}"},{"fieldId":"subject","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.subject }}"},{"fieldId":"date_received","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.date }}"},{"fieldId":"user_id","fieldValue":"={{ $('Get Token and User').item.json.user.id }}"},{"fieldId":"sender_name","fieldValue":"={{ $('Set Sender Name').item.json.sender_name }}"},{"fieldId":"sender_email","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.sender_email }}"},{"fieldId":"thread_id","fieldValue":"={{ $('Upsert Email Thread').item.json.threadId }}"},{"fieldId":"body","fieldValue":"={{ $('Markdownify Body').item.json.body }}"},{"fieldId":"relevant","fieldValue":"={{ $('Merge Relevance').item.json.relevant }}"},{"fieldId":"ios_link","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.ios_email_link }}"},{"fieldId":"relevance_explanation","fieldValue":"={{ $('Merge Relevance').item.json.explanation }}"},{"fieldId":"cc_emails","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.cc_emails.join(\",\") }}"},{"fieldId":"recipient_emails","fieldValue":"={{ $('Extract Relevant Email Parts').item.json.recipient_emails.join(\",\") }}"},{"fieldId":"created_at","fieldValue":"={{ $now.toUTC().toISO() }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1260,455],"id":"b7460457-6fdd-4135-83dc-0c0f1bfac04a","name":"Insert_Email","credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"assignments":{"assignments":[{"id":"a79e0813-2dc6-4a60-bd55-9b528d2267d4","name":"insertedEmail","value":"={{ $json }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1480,380],"id":"89b4a104-9974-4bd7-a6e4-6fa41655fad9","name":"Set Inserted Email"},{"parameters":{"assignments":{"assignments":[{"id":"c00d47aa-96c8-401f-b572-96e0c03088af","name":"relevant","value":"={{ $json.relevant }}","type":"boolean"},{"id":"3fab156d-027a-4d56-b03f-4df2e960c660","name":"explanation","value":"={{ $json.explanation }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[820,380],"id":"3bf90ba6-d13f-46be-9556-1e19f6458528","name":"Merge Relevance"}],"connections":{"Get Token and User":{"main":[[{"node":"Check if Email Exists in User Inbox","type":"main","index":0}]]},"Exists?":{"main":[[],[{"node":"Get Full Gmail Email","type":"main","index":0}]]},"Get Full Gmail Email":{"main":[[{"node":"Decode Email Body","type":"main","index":0}]]},"Decode Email Body":{"main":[[{"node":"Check if it is Promotion","type":"main","index":0}]]},"Check if it is Promotion":{"main":[[{"node":"Promotion?","type":"main","index":0}]]},"Promotion?":{"main":[[],[{"node":"Extract Relevant Email Parts","type":"main","index":0}]]},"Extract Relevant Email Parts":{"main":[[{"node":"Sender Name Empty?","type":"main","index":0}]]},"Email Not Intended for User?":{"main":[[],[{"node":"Isolate Email Data","type":"main","index":0}]]},"Isolate Email Data":{"main":[[{"node":"Clean Email Body","type":"main","index":0}]]},"Clean Email Body":{"main":[[{"node":"Markdownify Body","type":"main","index":0}]]},"Markdownify Body":{"main":[[{"node":"Summarize Email","type":"main","index":0}]]},"Summarize Email":{"main":[[{"node":"Upsert Email Thread","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Set Relevant Senders","type":"main","index":0}]]},"Set Relevant Senders":{"main":[[{"node":"If sender is relevant?","type":"main","index":0}]]},"Set Relevance":{"main":[[{"node":"Merge Relevance","type":"main","index":0}]]},"Classify Email":{"main":[[{"node":"Merge Relevance","type":"main","index":0}]]},"Sender Name Empty?":{"main":[[{"node":"Extract Sender Name","type":"main","index":0}],[{"node":"Set Sender Name","type":"main","index":0}]]},"Extract Sender Name":{"main":[[{"node":"Set Sender Name","type":"main","index":0}]]},"Set Sender Name":{"main":[[{"node":"Email Not Intended for User?","type":"main","index":0}]]},"If sender is relevant?":{"main":[[{"node":"Set Relevance","type":"main","index":0}],[{"node":"Classify Email","type":"main","index":0}]]},"Upsert Email Thread":{"main":[[{"node":"Find Relevant Sender Emails","type":"main","index":0}]]},"Relevant?":{"main":[[{"node":"Extract and Process Tasks","type":"main","index":0}]]},"Check if Email Exists in User Inbox":{"main":[[{"node":"Exists?","type":"main","index":0}],[{"node":"Get Matches","type":"main","index":0}]]},"Find Relevant Sender Emails":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Set Params","type":"main","index":0}]]},"Set Params":{"main":[[{"node":"Get Token and User","type":"main","index":0}]]},"Insert Email":{"main":[[{"node":"Set Inserted Email","type":"main","index":0}],[{"node":"Insert_Email","type":"main","index":0}]]},"Get Matches":{"main":[[{"node":"Set Count","type":"main","index":0}]]},"Set Count":{"main":[[{"node":"Exists?","type":"main","index":0}]]},"Insert_Email":{"main":[[{"node":"Set Inserted Email","type":"main","index":0}]]},"Set Inserted Email":{"main":[[{"node":"Relevant?","type":"main","index":0}]]},"Merge Relevance":{"main":[[{"node":"Insert Email","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"63JMaA3ATIsJVc6Y"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"userId":"RktDlUUj9naqyxsnWxxEjUXCBXZ2","emailId":"197be6108b0c0258"}}]},"versionId":"3b4d1e6c-cafe-42cc-a652-b1cc8924be10","triggerCount":0,"tags":[]}
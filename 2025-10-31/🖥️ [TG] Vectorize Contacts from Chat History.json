{"updatedAt":"2025-10-23T19:45:58.741Z","createdAt":"2025-08-28T21:44:49.811Z","id":"9AyU6Wzt8y547rsR","name":"🖥️ [TG] Vectorize Contacts from Chat History","active":true,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[272,1136],"id":"5e3eb20a-99be-40d7-a4fe-705d41600e4e","name":"Loop Over Items"},{"parameters":{"amount":10},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1392,1064],"id":"462d82ce-2ca1-4b3e-87f6-7b3f84167409","name":"Wait 10 seconds","webhookId":"895edb03-bff8-4d69-b36a-767f9bc54a37"},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":2}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-176,1136],"id":"2bb97395-d32b-4fd4-94c9-69f215b62b02","name":"Run Every 2 Hours"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2aa8fae4-89bf-486a-beec-671b4a35a536","leftValue":"={{ $json }}","rightValue":"","operator":{"type":"object","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[272,560],"id":"79510b35-ef0f-4dc8-8794-f46665583552","name":"Results?"},{"parameters":{"aggregate":"aggregateAllItemData","include":"allFieldsExcept","fieldsToExclude":"toolactivity","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[496,560],"id":"91d57014-97dd-403f-873a-b118283f7e90","name":"Aggregate"},{"parameters":{"jsonSchemaExample":"{\"contacts\": [\n  {\"name\": \"John McCain\",\n  \"phone\": \"+12354656\",\n  \"email\": \"email@email.com\"\n}]\n}","autoFix":true},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[848,576],"id":"28b61fb5-92f8-4499-abe7-3e720501b882","name":"Structured Output Parser"},{"parameters":{"model":"openai/o3","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[720,576],"id":"d827ab1d-44b7-4906-a98e-e3cb7d66bbaf","name":"o3","credentials":{"openRouterApi":{"id":"SeBKTiKFu0nP1GsL","name":"OpenRouter account"}}},{"parameters":{"model":"openai/gpt-5-mini","options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[928,784],"id":"17a8c005-c485-4c30-90d1-0e91a48cefef","name":"GPT 5 MINI","credentials":{"openRouterApi":{"id":"SeBKTiKFu0nP1GsL","name":"OpenRouter account"}}},{"parameters":{"promptType":"define","text":"=## Chat history:\n{{ JSON.stringify($json.data, 2) }}","hasOutputParser":true,"options":{"systemMessage":"=You are an expert data extraction assistant. \n\nYour task is to analyze the provided text and extract all contact details. \n\nFormat your response as a valid JSON array of objects. \n\nEach object must contain \"name\", \"email\", and \"phone\" keys. If a piece of information is missing for a contact, use null as the value. If no contacts are found at all, return an empty array []. \n\nDo not include any explanatory text outside of the JSON array.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[752,352],"id":"484871be-d3d9-4834-8ebb-c5e2b6bdf5cf","name":"Contact Extractor"},{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-176,360],"id":"c70a697e-491d-441d-9834-ac5e2c3b0eae","name":"When Executed by Another Workflow"},{"parameters":{"workflowId":{"__rl":true,"value":"9AyU6Wzt8y547rsR","mode":"list","cachedResultUrl":"/workflow/9AyU6Wzt8y547rsR","cachedResultName":"🖥️ [TG] Vectorize Contacts from Chat History"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{"waitForSubWorkflow":false}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[1168,992],"id":"013e8de7-0f0c-494a-bbd3-277332d9b743","name":"Extract Contacts from Conversation"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[2112,584],"id":"599e28f3-edfb-4baa-aff6-49e703c8f897","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"JNBPFneOXwzjzSKh","name":"OpenAI account"}}},{"parameters":{"fieldToSplitOut":"output.contacts","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[1216,560],"id":"b5cf1aed-b193-4daa-8b0a-f96047224875","name":"Split Out"},{"parameters":{"operation":"executeQuery","query":"SELECT\n  telegram_date_utc AS date,\n  text AS message,\n  tool_activity as toolActivity,\n  CASE\n    WHEN direction = 'inbound' THEN 'user'\n    ELSE 'ai'\n  END AS role\nFROM\n  dev.telegram_messages\nWHERE (recipient_id = '{{ $json.telegram_id }}' OR sender_id = '{{ $json.telegram_id }}')\nAND telegram_date >= {{ $now.minus(2, 'hour').toSeconds().round() }}\nAND direction = 'inbound'\nORDER BY telegram_date DESC;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[48,560],"id":"d6c59f82-796e-46f6-b9b7-232c90c3a334","name":"Get User Messages","alwaysOutputData":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"mode":"insert","tableName":"n8n_vectors_dev","options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","typeVersion":1.3,"position":[2144,360],"id":"8ffe00f5-d2f2-4069-9476-45af03514236","name":"Postgres PGVector Store","retryOnFail":true,"waitBetweenTries":5000,"maxTries":5,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"=Names:\n{{ $('Keep Contacts with Email').item.json.name }}\n\nEmails:\n{{ $('Keep Contacts with Email').item.json.email }}","textSplittingMode":"custom","options":{"metadata":{"metadataValues":[{"name":"user_id","value":"={{ $('When Executed by Another Workflow').item.json.id }}"},{"name":"source","value":"conversation"},{"name":"contact_id","value":"={{$('Keep Contacts with Email').item.json.email}}"}]}}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1.1,"position":[2240,584],"id":"12fc6fae-2634-4ef8-9328-0b99f9b1a987","name":"Default Data Loader"},{"parameters":{"chunkOverlap":20,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[2320,792],"id":"1ddde0ee-d743-413e-b980-4af86a33717c","name":"Recursive Character Text Splitter"},{"parameters":{"operation":"executeQuery","query":"SELECT metadata->>'contact_id' AS contact_id\nFROM n8n_vectors_dev\nWHERE metadata->>'user_id' = '{{ $('When Executed by Another Workflow').first().json.id }}' AND metadata->>'source' = 'conversation'","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[856,160],"id":"225cf399-4e7a-43be-a0bb-7c0595f254ac","name":"Get Contact IDs","executeOnce":true,"alwaysOutputData":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[1216,160],"id":"44eda828-27ca-4e05-af12-b784e9fb4748","name":"Aggregate Existing Contacts"},{"parameters":{"assignments":{"assignments":[{"id":"31e3b69a-c874-4246-ab1f-da60901c5282","name":"existing_contact_ids","value":"={{ $json.data.filter(item => item.contact_id !== null && item.contact_id !== undefined).map(item => item.contact_id) }}","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1440,160],"id":"35fc53cf-6e22-48e3-851e-6e2775f30dd9","name":"Set Existing Contacts"},{"parameters":{"mode":"chooseBranch","useDataOfInput":2},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1664,360],"id":"11e58fc5-4c60-425b-adcc-b09a5655e9a2","name":"Merge"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0b673b37-8e0c-4ca2-9556-a293787089ef","leftValue":"={{ $json.email }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}},{"id":"a25f03bf-af03-4824-b457-8c57d6375e6d","leftValue":"={{ $json.email }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[1440,560],"id":"a1bd1da5-e373-4977-804e-a86f606aa04c","name":"Keep Contacts with Email"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"af841d42-4d1f-4f56-b50f-53909916edc3","leftValue":"={{ $('Set Existing Contacts').first().json.existing_contact_ids }}","rightValue":"={{ $json.email }}","operator":{"type":"array","operation":"notContains","rightType":"any"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[1888,360],"id":"ee478cb3-2043-4e41-8d3a-5b33ab6dd198","name":"Keep New Contacts"},{"parameters":{"operation":"executeQuery","query":"SELECT * FROM dev.get_users_with_calendar();","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[48,1136],"id":"3aaee670-8e17-448a-86dc-21bc73391000","name":"Get Valid Users","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"operation":"executeQuery","query":"SELECT dev.get_telegram_id('{{ $('Loop Over Items').item.json.id }}') as telegram_id;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[496,992],"id":"88981c13-d0a5-43e8-a2fd-9297b3a25d9c","name":"Get User's Telegram ID","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"mode":"raw","jsonOutput":"={{ Object.assign({}, $('Loop Over Items').item.json, $('Get User\\'s Telegram ID').item.json) }}","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[944,992],"id":"e14d184b-3b71-4737-96ef-0d8a489d3908","name":"Set User"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b9612612-c25c-471b-a2a8-5410fd277200","leftValue":"={{ $json.telegram_id }}","rightValue":"","operator":{"type":"string","operation":"empty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[720,992],"id":"06549553-76da-4f4a-ba8a-f2fe9e26b047","name":"Empty?"}],"connections":{"Loop Over Items":{"main":[[],[{"node":"Get User's Telegram ID","type":"main","index":0}]]},"Wait 10 seconds":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Run Every 2 Hours":{"main":[[{"node":"Get Valid Users","type":"main","index":0}]]},"Results?":{"main":[[{"node":"Aggregate","type":"main","index":0}],[]]},"Aggregate":{"main":[[{"node":"Contact Extractor","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Contact Extractor","type":"ai_outputParser","index":0}]]},"o3":{"ai_languageModel":[[{"node":"Contact Extractor","type":"ai_languageModel","index":0}]]},"GPT 5 MINI":{"ai_languageModel":[[{"node":"Structured Output Parser","type":"ai_languageModel","index":0}]]},"Contact Extractor":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Get User Messages","type":"main","index":0},{"node":"Get Contact IDs","type":"main","index":0}]]},"Extract Contacts from Conversation":{"main":[[{"node":"Wait 10 seconds","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Postgres PGVector Store","type":"ai_embedding","index":0}]]},"Split Out":{"main":[[{"node":"Keep Contacts with Email","type":"main","index":0}]]},"Get User Messages":{"main":[[{"node":"Results?","type":"main","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Postgres PGVector Store","type":"ai_document","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"Get Contact IDs":{"main":[[{"node":"Aggregate Existing Contacts","type":"main","index":0}]]},"Aggregate Existing Contacts":{"main":[[{"node":"Set Existing Contacts","type":"main","index":0}]]},"Set Existing Contacts":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Keep Contacts with Email":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Keep New Contacts","type":"main","index":0}]]},"Keep New Contacts":{"main":[[{"node":"Postgres PGVector Store","type":"main","index":0}]]},"Get Valid Users":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get User's Telegram ID":{"main":[[{"node":"Empty?","type":"main","index":0}]]},"Set User":{"main":[[{"node":"Extract Contacts from Conversation","type":"main","index":0}]]},"Empty?":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Set User","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Run Every 2 Hours":{"recurrenceRules":[0]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"id":"Rpyn89tYSO4FBo3uyTeXJ4Pyzspg","email":"binhqtran20@gmail.com","display_name":"B T","created_at":"2025-10-12T01:40:17.023Z","time_zone":null,"position":null,"role":null,"phone_number":"+19493707747","integration_created_at":"2025-10-12T01:40:17.023Z","integration_updated_at":"2025-10-23T12:00:14.951Z","telegram_id":"1655098991"}}],"Set User":[{"json":{"id":"Rpyn89tYSO4FBo3uyTeXJ4Pyzspg","email":"binhqtran20@gmail.com","display_name":"B T","created_at":"2025-10-12T01:40:17.023Z","time_zone":null,"position":null,"role":null,"phone_number":"+19493707747","integration_created_at":"2025-10-12T01:40:17.023Z","integration_updated_at":"2025-10-23T12:00:14.951Z","telegram_id":"1655098991"}}]},"versionId":"32084b6d-d335-425d-b84d-4cda12d73993","triggerCount":1,"shared":[{"updatedAt":"2025-08-28T21:44:49.811Z","createdAt":"2025-08-28T21:44:49.811Z","role":"workflow:owner","workflowId":"9AyU6Wzt8y547rsR","projectId":"8nyfoRCh3nEYWaKJ"}],"tags":[]}
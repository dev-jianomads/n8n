{"createdAt":"2025-05-13T21:18:38.677Z","updatedAt":"2025-05-20T22:36:41.000Z","id":"XS0zygeY8GDNLnNN","name":"ðŸ¤– Find Date Range","active":false,"nodes":[{"parameters":{"modelId":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"GPT-4.1"},"messages":{"values":[{"content":"=You are an expert assistant in scheduling meetings. You will be given:\n\nThe current date (i.e., \"today's date\").\nThe recipient's time zone.\nThe text of an email thread or meeting request.\n\nYour task is to:\n\n* Extract potential date/time ranges from the email content, interpreting them in the recipient's time zone.\n* If multiple date/time ranges are suggested, pick the earliest one.\n* If the email is vague and says, for example, \"anytime next week,\" assume Monday of the upcoming week (in the recipient's time zone).\n* If no explicit or implicit time range is found, default to tomorrow from 9 AM to 6 PM in the recipient's time zone.\n* The default duration is 60 minutes, unless explicitly stated otherwise in the email body.\n* Output only a valid JSON object with the following format:\n\n{\n  \"start\": \"YYYY-MM-DDTHH:MM:SSÂ±HH:MM\",\n  \"end\": \"YYYY-MM-DDTHH:MM:SSÂ±HH:MM\",\n  \"duration\": number_of_minutes\n}\n\nWhere:\n\n* \"start\" is the chosen meeting start time in ISO 8601 format (with the local time offset).\n* \"end\" is the chosen meeting end time in ISO 8601 format (with the local time offset).\n* \"duration\" is the integer representing how many minutes the meeting should last.\n\n## Important details and clarifications:\n\n* Convert all times to the recipient's time zone (e.g., Australia/Sydney).\n* \"Today's date\" is provided so you can interpret references like \"tomorrow,\" \"next week,\" etc.\n* If a partial time range is given (e.g., \"morning,\" \"afternoon,\" \"evening\"), you should do your best to pick a standard assumption (e.g., morning could be 10 AM, afternoon could be 2 PM, evening could be 6 PM, etc.)â€”whatever best fits the schedule constraints.\n* If the email says something like \"Tuesday evening or Wednesday morning,\" choose the earliest possible time in the future (Tuesday evening in this example).\n* If you cannot confidently extract a time range from the text, default to tomorrow from 9 AM to 6 PM.\n* If there is a mention of duration in the email (e.g., \"a 90-minute call\"), adjust the duration accordingly.\n* Only return a JSON object with keys start, end, and duration; do not add or modify any other fields in the output.\n\n## Additional instructions to ensure the user's local timezone is always returned:\n\n1. Always interpret all dates and times in the userâ€™s specified time zone.\n2. When returning the final JSON object, make sure the \"start\" and \"end\" fields include the correct offset for the userâ€™s time zone in ISO 8601 format.\n3. If no user time zone is specified, default to a known or requested time zone (e.g., UTC).\n4. Never alter or ignore the user-provided time zoneâ€”use it verbatim and keep it consistent throughout the response.","role":"system"},{"content":"=Today's date: 2025-01-22\nTime zone: Australia/Sydney\nEmail body: Are you free tomorrow at 10 AM? I only need 30 minutes."},{"content":"{\"start\": \"2025-01-23T10:00:00+11:00\", \"end\": \"2025-01-23T10:30:00+11:00\", \"duration\": 30}","role":"assistant"},{"content":"Today's date: 2025-01-25\nTime zone: Australia/Sydney\nEmail body: We could meet next Tuesday or next Thursday, 1 hour each, whichever is earlier."},{"content":"{\"start\": \"2025-01-28T09:00:00+11:00\", \"end\": \"2025-01-28T10:00:00+11:00\", \"duration\": 60}","role":"assistant"},{"content":"Today's date: 2025-01-22\nTime zone: Australia/Sydney\nEmail body: Hey, let's meet sometime next week. I have plenty of availabilityâ€”any day works. \nI think 30 minutes should be enough."},{"content":"{\"start\": \"2025-01-27T09:00:00+11:00\",\"end\": \"2025-01-27T09:30:00+11:00\", \"duration\": 30}","role":"assistant"},{"content":"Today's date: 2025-01-23\nTime zone: Australia/Sydney\nEmail body: I'm not sure when we can meet, but let's try something soon."},{"content":"{\"start\": \"2025-01-24T09:00:00+11:00\",\"end\": \"2025-01-24T10:00:00+11:00\",\"duration\": 60}","role":"assistant"},{"content":"=Today's date: {{ $now.toUTC().toISO() }}\n\nTime zone: {{ $json.timeZone }}\n\nEmail Body: {{ $json.body }}"}]},"jsonOutput":true,"options":{"maxTokens":512,"temperature":0.2}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[220,0],"id":"e212195a-f6d9-4c34-89c7-eec9dcee4211","name":"Date Range Finder","credentials":{"openAiApi":{"id":"hyDTTerH5EyySsq0","name":"OpenAi account"}}},{"parameters":{"workflowInputs":{"values":[{"name":"timeZone"},{"name":"body"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"9329d4dd-a6a7-4dda-9379-5626fb4db428","name":"When Executed by Another Workflow"},{"parameters":{"mode":"raw","jsonOutput":"={{ JSON.stringify($json.message.content) }}","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[596,0],"id":"a167adc6-cd60-4be7-a538-68419bbbd4cb","name":"Return Response"}],"connections":{"Date Range Finder":{"main":[[{"node":"Return Response","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Date Range Finder","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"3DwlFyiaSzmnZPkS"},"staticData":null,"meta":null,"pinData":{},"versionId":"85b0cbd9-2981-4bff-91c6-b2e9eec5ad25","triggerCount":1,"tags":[]}
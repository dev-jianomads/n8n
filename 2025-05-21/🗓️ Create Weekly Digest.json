{"createdAt":"2025-05-14T22:25:36.136Z","updatedAt":"2025-05-20T22:33:26.000Z","id":"x6qHesYMIpylFzNU","name":"üóìÔ∏è Create Weekly Digest","active":true,"nodes":[{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"0 9 * * 5"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,-80],"id":"7348b89f-fbe2-42ec-8bc1-f2d20f5acdce","name":"Run Every Friday at 9 AM"},{"parameters":{"assignments":{"assignments":[{"id":"3efa06e2-3cc7-4d35-b36f-83d924b553cc","name":"since","value":7,"type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[440,-80],"id":"bede33be-31eb-4d9f-8407-cc0cc87af17d","name":"Set Params"},{"parameters":{"assignments":{"assignments":[{"id":"1951448e-815e-400f-aebb-2c2a6d7be275","name":"currentPeriodStart","value":"={{ $now.plus(-$json.since, 'days').toUTC().toString() }}","type":"string"},{"id":"f9c8292f-6b7e-441c-97eb-00c5b1c1e5ec","name":"currentPeriodEnd","value":"={{ $now.toUTC().toString() }}","type":"string"},{"id":"ebf66c1f-9775-458b-aa29-1839fbac5d3a","name":"previousPeriodEnd","value":"={{ $now.plus(-$json.since, 'days').toUTC().toString() }}","type":"string"},{"id":"8d7e72e7-9e9b-4857-84a9-ac24811b431d","name":"previousPeriodStart","value":"={{ $now.plus(-($json.since * 2), 'days').toUTC().toString() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[660,-80],"id":"5b8fcd81-d769-41d0-bce0-a525a4b913e7","name":"Set Period"},{"parameters":{"operation":"executeQuery","query":"SELECT COUNT(*)\nFROM emails\nWHERE user_id = '{{ $('Get Users').item.json.id }}'\nAND created_at AT TIME ZONE 'UTC' >= '{{ $json.currentPeriodStart }}' AND created_at <= '{{ $json.currentPeriodEnd }}';","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[880,-80],"id":"fc6af092-d22a-4701-b466-13995a33461f","name":"Count Current Emails","credentials":{"postgres":{"id":"kI6uSN0fI2Vhpmlk","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT COUNT(*)\nFROM tasks\nWHERE user_id = '{{ $('Get Users').item.json.id }}'\nAND created_at AT TIME ZONE 'UTC' >= '{{ $('Set Period').item.json.currentPeriodStart }}' AND created_at <= '{{ $('Set Period').item.json.currentPeriodEnd }}';","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1100,-80],"id":"eb16315a-46e7-487e-84c3-9edfa3f3c047","name":"Count Current Tasks","credentials":{"postgres":{"id":"kI6uSN0fI2Vhpmlk","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT COUNT(*)\nFROM tasks\nWHERE user_id = '{{ $('Get Users').item.json.id }}'\nAND created_at AT TIME ZONE 'UTC' >= '{{ $('Set Period').item.json.previousPeriodStart }}' AND created_at <= '{{ $('Set Period').item.json.previousPeriodEnd }}';","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1540,-80],"id":"c2c4444b-2eed-40d2-a0d2-d594b8500d56","name":"Count Previous Tasks","credentials":{"postgres":{"id":"kI6uSN0fI2Vhpmlk","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT COUNT(*)\nFROM emails\nWHERE user_id = '{{ $('Get Users').item.json.id }}'\nAND created_at AT TIME ZONE 'UTC' >= '{{ $('Set Period').item.json.previousPeriodStart }}' AND created_at <= '{{ $('Set Period').item.json.previousPeriodEnd }}';","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1320,-80],"id":"6a09cf5e-9745-47bc-88e1-2d3dcb0604c9","name":"Count Previous Emails","credentials":{"postgres":{"id":"kI6uSN0fI2Vhpmlk","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"e02db435-704d-4225-bd19-71d63c6c0c69","name":"subject","value":"=Your Weekly Task Summary ({{ $('Set Period').item.json.currentPeriodStart.toDateTime().format('DD')}} - {{ $('Set Period').item.json.currentPeriodEnd.toDateTime().format('DD')}})","type":"string"},{"id":"6dd6fbbf-8526-4cec-8224-d1d4ff9aebbd","name":"current_period_start","value":"={{ $('Set Period').item.json.currentPeriodStart.toDateTime().format('yyyy-MM-dd') }}","type":"string"},{"id":"dda3dd59-8ae1-4025-aaec-1bf9d807bbc6","name":"current_period_end","value":"={{ $('Set Period').item.json.currentPeriodEnd.toDateTime().format('yyyy-MM-dd') }}","type":"string"},{"id":"29af51b7-9ebf-4701-afef-dbf13b087c07","name":"total_read","value":"={{ $('Count Current Emails').item.json.count }}","type":"number"},{"id":"ae245fef-1fba-48c2-9a91-5ba1f2aaab39","name":"read_diff","value":"={{ $('Count Current Emails').item.json.count - $('Count Previous Emails').item.json.count }}","type":"number"},{"id":"9480dac8-4934-40e6-9925-ad4d2099f8cb","name":"total_new_tasks","value":"={{ $('Count Current Tasks').item.json.count }}","type":"number"},{"id":"28ecf7e9-21c4-4baf-8e48-b2c07cfa681f","name":"tasks_diff","value":"={{ $('Count Current Tasks').item.json.count - $('Count Previous Tasks').item.json.count }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1760,-80],"id":"3d283c0e-af92-4b7e-98a2-b9313eeb6e52","name":"Set Digest Vars"},{"parameters":{"tableId":"digests","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('Get Users').item.json.id }}"},{"fieldId":"content","fieldValue":"={{ $json.message.content }}"},{"fieldId":"from","fieldValue":"={{ $('Set Digest Vars').item.json.current_period_start }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[2356,-80],"id":"72e7c161-577c-4836-9332-dd2356afc723","name":"Save Digest","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4.1-nano","mode":"list","cachedResultName":"GPT-4.1-NANO"},"messages":{"values":[{"content":"=You are an AI agent that receives a JSON object containing digest information. The JSON object has the following keys:\n\t- \"subject\": A string representing the digest subject.\n\t- \"current_period_start\": A string representing the start date of the current period in \"YYYY-MM-DD\" format.\n\t- \"current_period_end\": A string representing the end date of the current period in \"YYYY-MM-DD\" format.\n\t- \"total_read\": An integer representing the total number of emails read during the current period.\n\t- \"read_diff\": An integer representing the difference in the number of emails read compared to last week.\n\t- If positive, you should display it as ‚Äúup X from last week‚Äù.\n\t- If negative, display it as ‚Äúdown X from last week‚Äù, where X is the absolute value.\n\t- \"total_new_tasks\": An integer representing the total number of new tasks created during the current period.\n\t- \"tasks_diff\": An integer representing the difference in the number of tasks created compared to last week.\n\t- If positive, display it as ‚Äúup X from last week‚Äù.\n\t- If negative, display it as ‚Äúdown X from last week‚Äù, where X is the absolute value.\n\t- \"total_focus_tasks\": An integer representing the number of new tasks marked as 'focus'.\n    - \"total_focus_tasks_percentage\": Percentage of new tasks marked as 'focus'.\n    - \"total_done_tasks\": An integer representing the number of new tasks marked as 'done',\n\nYour task is to generate a digest in Markdown format following this structure:\n\n## <subject>\n\nTotal Read: <total_read> (<up/down> <abs(read_diff)> from last week)\nTotal New Tasks: <total_new_tasks> (<up/down> <abs(tasks_diff)> from last week)\nTotal Focus: <total_focus_tasks> (<total_focus_tasks_percentage>% of new)\n\n### Progress\n\nCompleted: <total_done_tasks>\n\n\nExample:\n\nGiven the following JSON input:\n{\n    \"subject\": \"Your Weekly Task Summary (Jan 27 - Feb 03)\",\n    \"current_period_start\": \"2025-01-27\",\n    \"current_period_end\": \"2025-02-03\",\n    \"total_read\": 83,\n    \"read_diff\": 21,\n    \"total_new_tasks\": 87,\n    \"total_focus_tasks\": 9,\n    \"total_focus_tasks_percentage\": 11,\n    \"total_done_tasks\": 10,\n    \"tasks_diff\": 53\n}\n\n\nYour output should be:\n\n## Your Weekly Task Summary (Jan 27 - Feb 03)\n\nTotal Read: 83 (up 21 from last week)\nTotal New Tasks: 87 (up 53 from last week)\nTotal Focus: 9 (11% of new)\n\n### Progress\n\nCompleted: 10\n\nRemember to adjust the wording for any negative differences (e.g., ‚Äúdown 5 from last week‚Äù instead of ‚Äúup 5 from last week‚Äù).\n\nProduce only the final Markdown digest output.","role":"system"},{"content":"={{ JSON.stringify($json) }}"}]},"options":{"maxTokens":256,"temperature":0.1}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[1980,-80],"id":"af2aac39-f821-47e0-ac08-7cd37ddae955","name":"Write Digest","credentials":{"openAiApi":{"id":"hyDTTerH5EyySsq0","name":"OpenAi account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT id\nFROM users;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[220,-80],"id":"7a453551-f6d7-44ed-98d0-5e29f9fdc686","name":"Get Users","credentials":{"postgres":{"id":"kI6uSN0fI2Vhpmlk","name":"Postgres account"}}}],"connections":{"Run Every Friday at 9 AM":{"main":[[{"node":"Get Users","type":"main","index":0}]]},"Set Params":{"main":[[{"node":"Set Period","type":"main","index":0}]]},"Set Period":{"main":[[{"node":"Count Current Emails","type":"main","index":0}]]},"Count Current Emails":{"main":[[{"node":"Count Current Tasks","type":"main","index":0}]]},"Count Current Tasks":{"main":[[{"node":"Count Previous Emails","type":"main","index":0}]]},"Count Previous Emails":{"main":[[{"node":"Count Previous Tasks","type":"main","index":0}]]},"Count Previous Tasks":{"main":[[{"node":"Set Digest Vars","type":"main","index":0}]]},"Set Digest Vars":{"main":[[{"node":"Write Digest","type":"main","index":0}]]},"Write Digest":{"main":[[{"node":"Save Digest","type":"main","index":0}]]},"Get Users":{"main":[[{"node":"Set Params","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","timezone":"Australia/Sydney","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"3DwlFyiaSzmnZPkS"},"staticData":{"node:Run Every Friday at 9 AM":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"043c1f4a-c69f-4814-9403-bdbda45e4e99","triggerCount":1,"tags":[]}
{"createdAt":"2025-04-21T23:52:56.287Z","updatedAt":"2025-05-20T22:34:18.000Z","id":"ar1V7OobX3sauykf","name":"Get Token","active":true,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"user_id"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-620,740],"id":"eb44f276-06ab-4600-b05a-d69cd757a48b","name":"When Executed by Another Workflow"},{"parameters":{"operation":"get","tableId":"users","filters":{"conditions":[{"keyName":"id","keyValue":"={{ $json.user_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-400,640],"id":"7328979c-3cf6-4f20-979b-e9e1a4edb016","name":"Get User","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"mode":"runOnceForEachItem","jsCode":"/**\n * Check if a user's access token is expired.\n * @param {{ access_token?: string | null, token_expiration_date?: string | null }} user\n * @returns {boolean} true if missing or expired\n */\nfunction isTokenExpired(user) {\n  const { access_token: token, token_expiration_date: exp } = user;\n  // No token or no expiration date → expired\n  if (!token || !exp) return true;\n\n  // Normalize \"2025-04-16 21:58:02+00\" → \"2025-04-16T21:58:02+00\"\n  const iso = exp.replace(' ', 'T');\n  const expiresAt = new Date(iso);\n\n  // Invalid date → treat as expired\n  if (isNaN(expiresAt.getTime())) return true;\n\n  // Compare against now (Date.now() is UTC‑based under the hood)\n  return expiresAt.getTime() < Date.now();\n}\n\nreturn {\n  json: {\n    user: $input.item.json,\n    expiredToken: isTokenExpired($input.item.json)\n  }\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-180,640],"id":"48ec3741-ea76-465f-9572-9345aa43fb18","name":"Check Token Expiration"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"05a3655d-1a5c-407e-abd9-b77305dc158a","leftValue":"={{ $json.expiredToken }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[40,640],"id":"394a0aad-e0fb-4807-9422-63538f6829f0","name":"Expired Token?"},{"parameters":{"assignments":{"assignments":[{"id":"cb8984ad-464a-45b8-9d96-89e6c213699e","name":"accessToken","value":"={{ $('Get User').item.json.access_token }}","type":"string"},{"id":"c2055894-db45-4a28-8375-2472fde8585c","name":"user","value":"={{ $('Get User').item.json }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[260,740],"id":"322cca5b-0568-4145-a96b-61f4fbdaf8cd","name":"Return Token and User"},{"parameters":{"operation":"addToDate","magnitude":"={{ $now.toUTC() }}","timeUnit":"seconds","duration":"={{ $json.body.expires_in - 120 }}","outputFieldName":"tokenExpirationDate","options":{"includeInputFields":true}},"type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[480,440],"id":"d810748d-2d40-4af0-93d0-639d069206e9","name":"Compute Expiration Date"},{"parameters":{"operation":"update","tableId":"users","matchType":"allFilters","filters":{"conditions":[{"keyName":"id","condition":"eq","keyValue":"={{ $('Expired Token?').item.json.user.id }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"access_token","fieldValue":"={{ $json.body.access_token }}"},{"fieldId":"token_expiration_date","fieldValue":"={{ $json.tokenExpirationDate }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[700,440],"id":"78c3a721-9803-4986-8678-c1c047c80895","name":"Store Token","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"assignments":{"assignments":[{"id":"ae218e7e-2994-42cf-82d0-81bd7deea876","name":"accessToken","value":"={{ $json.access_token }}","type":"string"},{"id":"8d144ce4-10cf-4da7-9a48-3be19ea43eda","name":"user","value":"={{ $json }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[920,440],"id":"af6baf54-2d3d-4585-aaed-90f301a70a8b","name":"Return Refreshed Token & User"},{"parameters":{"method":"POST","url":"https://oauth2.googleapis.com/token","sendQuery":true,"queryParameters":{"parameters":[{"name":"client_id","value":"={{ $json.user.client_id }}"},{"name":"client_secret","value":"={{ $json.user.client_secret }}"},{"name":"refresh_token","value":"={{ $json.user.refresh_token }}"},{"name":"grant_type","value":"refresh_token"}]},"options":{"response":{"response":{"fullResponse":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[260,540],"id":"ee8f6cdf-dd17-49fa-b03a-886b1a00d265","name":"Get New Token","onError":"continueErrorOutput"},{"parameters":{"errorMessage":"Could not refresh token."},"type":"n8n-nodes-base.stopAndError","typeVersion":1,"position":[700,640],"id":"64852a53-832a-4d66-840e-2ff22f6ea964","name":"Stop and Error"},{"parameters":{"operation":"update","tableId":"users","matchType":"allFilters","filters":{"conditions":[{"keyName":"id","condition":"eq","keyValue":"={{ $('Expired Token?').item.json.user.id }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"refresh_expired","fieldValue":"true"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[480,640],"id":"2b202ce1-c35a-4ec0-8e65-54220de2d6a4","name":"Refresh Token Expired!","credentials":{"supabaseApi":{"id":"4EHtJhQUmG6XN1Mw","name":"Supabase account"}}},{"parameters":{"content":"## Token Expired!\n\nSteps to refresh the token or fail trying.","height":480,"width":1100},"type":"n8n-nodes-base.stickyNote","position":[-240,320],"typeVersion":1,"id":"b9668d73-147e-410c-ad0c-d465405bac4e","name":"Sticky Note"},{"parameters":{"path":"b084c8dc-f675-4e3a-b58d-c0e022059763","responseMode":"lastNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-840,540],"id":"2069cd41-5cb3-4e82-b982-6e92333a0ef7","name":"Webhook","webhookId":"b084c8dc-f675-4e3a-b58d-c0e022059763"},{"parameters":{"assignments":{"assignments":[{"id":"2063fcf3-f5d7-4054-8d51-a1c9f5e0d8fe","name":"user_id","value":"={{ $json.query.user_id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-620,540],"id":"e83d8a0c-43c8-4dd1-b455-3c5f9d8f4d8a","name":"Set User Id"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get User","type":"main","index":0}]]},"Get User":{"main":[[{"node":"Check Token Expiration","type":"main","index":0}]]},"Check Token Expiration":{"main":[[{"node":"Expired Token?","type":"main","index":0}]]},"Expired Token?":{"main":[[{"node":"Get New Token","type":"main","index":0}],[{"node":"Return Token and User","type":"main","index":0}]]},"Compute Expiration Date":{"main":[[{"node":"Store Token","type":"main","index":0}]]},"Store Token":{"main":[[{"node":"Return Refreshed Token & User","type":"main","index":0}]]},"Get New Token":{"main":[[{"node":"Compute Expiration Date","type":"main","index":0}],[{"node":"Refresh Token Expired!","type":"main","index":0}]]},"Refresh Token Expired!":{"main":[[{"node":"Stop and Error","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Set User Id","type":"main","index":0}]]},"Set User Id":{"main":[[{"node":"Get User","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"3DwlFyiaSzmnZPkS"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c01de718-b855-49a9-b8e2-e6736b13d687","triggerCount":1,"tags":[]}
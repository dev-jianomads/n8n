{"updatedAt":"2025-10-30T21:02:13.420Z","createdAt":"2025-10-30T20:30:59.716Z","id":"2kVDxghBRFinYgag","name":">>> [TG] Get Time Zone","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"userId"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-1840,384],"id":"2819d84d-00f9-4afd-837b-fe8526afcba9","name":"When Executed by Another Workflow"},{"parameters":{"workflowId":{"__rl":true,"value":"pE2lsrstziYiLtF8","mode":"list","cachedResultUrl":"/workflow/pE2lsrstziYiLtF8","cachedResultName":"[TG] Get Token for TG Integration"},"workflowInputs":{"mappingMode":"defineBelow","value":{"user_id":"={{ $('When Executed by Another Workflow').first().json.userId }}"},"matchingColumns":["user_id"],"schema":[{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[0,432],"id":"6c4013a3-a900-4a81-a663-271daa9c76f8","name":"Get Token"},{"parameters":{"url":"https://www.googleapis.com/calendar/v3/calendars/primary","sendQuery":true,"queryParameters":{"parameters":[{"name":"fields","value":"timeZone"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get Token').first().json.accessToken }}"},{"name":"Content-Type","value":"application/json"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[224,432],"id":"d4db5dd8-9f9f-49c3-b511-5c24124ab251","name":"Get Time Zone from Primary Calendar","retryOnFail":true,"alwaysOutputData":false,"onError":"continueErrorOutput"},{"parameters":{"jsonSchemaExample":"{\n  \"time_zone\": \"Europe/Paris\",\n  \"confidence\": 0.9,\n  \"present_like\": true,\n  \"reason\": \"Reason\"\n}","autoFix":true},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[-592,80],"id":"23eec19f-895f-45e3-9f1b-270f7c0a8b91","name":"Structured Output Parser"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-512,288],"id":"3431e0ba-9524-4678-9496-565aa7eeaed6","name":"4.1","credentials":{"openAiApi":{"id":"JNBPFneOXwzjzSKh","name":"OpenAI account"}}},{"parameters":{"promptType":"define","text":"=Last messages (newest first): {{ JSON.stringify($('Messages?').first().json.messages) }}","hasOutputParser":true,"options":{"systemMessage":"=**You are a Time Zone Extractor.** Determine the user's CURRENT time zone from chat history.\n\n  **Current Date**: {{ $now.toUTC().format('yyyy-MM-dd HH:mm:ss') }}\n\n**Valid Location Signals:**\n\n**Strong (high confidence):**\n- Explicit present: \"I'm in [city]\", \"here in [city]\", \"just landed in [city]\", \"currently in [city]\"\n- Direct timezone mention: \"my time zone is [zone]\"\n- Scheduled events for TODAY: \"meeting on Oct 30 in [city]\" when current date is Oct 30\n\n**Weak (only valid with prior location context):**\n- Implicit present: \"it's hot here\", \"at this coffee shop\", \"my local time is...\"\n\n**Always Reject:**\n- Future plans: \"going to [city]\", \"traveling to [city] next week\", \"will be in [city]\"\n- Past references: \"I was in [city]\", \"visited [city]\"\n- Planning/hypotheticals: \"let's meet in [city]\", \"want to go to [city]\"\n\n**Reasoning Guidelines:**\n- **Recency matters**: More recent location statements override older ones\n- **Temporal logic**: If user mentioned \"meeting tomorrow in Tokyo\" and tomorrow is now today, they're in Tokyo\n- **Confidence**: Explicit recent statements = high confidence. Older or inferred = lower confidence. Very old or ambiguous = null\n- **Context helps**: Use surrounding messages to disambiguate (e.g., local landmarks, weather mentions)\n\n**Output JSON only:**\n```json\n{\n  \"time_zone\": \"America/New_York or null\",\n  \"confidence\": 0.0-1.0,\n  \"reason\": \"Brief explanation\"\n}\n```"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-688,-144],"id":"fe4bc9e5-3df3-4bcd-92e0-19df5f838310","name":"LLM Verifier"},{"parameters":{"operation":"executeQuery","query":"insert into public.tz_presence_cache\n  (user_id, tz, source, strength, observed_at, committed_at, last_checked_at, evidence_message_id, evidence_text, updated_at)\nvalues\n  ($1::text, $2::text, 'chat_explicit', $3::numeric, now(), now(), now(), null, $4::text, now())\non conflict (user_id) do update set\n  tz = excluded.tz,\n  source = excluded.source,\n  strength = excluded.strength,\n  observed_at = excluded.observed_at,\n  committed_at = excluded.committed_at,\n  last_checked_at = excluded.last_checked_at,\n  evidence_message_id = excluded.evidence_message_id,\n  evidence_text = excluded.evidence_text,\n  updated_at = now();\n","options":{"queryReplacement":"={{ [$('When Executed by Another Workflow').item.json.userId, $json.output.time_zone, $json.output.confidence, $json.output.reason] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[0,16],"id":"e56830a0-66e8-4ad2-be73-f00697244c5b","name":"Upsert (Chat)","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{ $('Confident Output?').item.json.output.time_zone }}\",\n  \"confidence\": {{ $('Confident Output?').item.json.output.confidence }},\n  \"source\": \"chat_explicit\",\n  \"reason\": \"{{ $('Confident Output?').item.json.output.reason }}\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[224,16],"id":"92a148cd-8ad3-4ccd-8b67-e9e79de67c9a","name":"Set (Chat)"},{"parameters":{"operation":"executeQuery","query":"insert into public.tz_presence_cache\n  (user_id, tz, source, strength, observed_at, committed_at, last_checked_at, updated_at)\nvalues\n  ($1::text, $2::text, 'calendar_setting', 0.6, now(), now(), now(), now())\non conflict (user_id) do update set\n  tz = excluded.tz,\n  source = excluded.source,\n  strength = excluded.strength,\n  observed_at = excluded.observed_at,\n  committed_at = excluded.committed_at,\n  last_checked_at = excluded.last_checked_at,\n  updated_at = now();","options":{"queryReplacement":"={{ [$('When Executed by Another Workflow').item.json.userId, $json.timeZone] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[448,336],"id":"11b5afbd-cb5e-47d5-acaa-e764a12d88b5","name":"Upsert (Calendar Settings)","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"operation":"executeQuery","query":"SELECT public.get_user_telegram_messages(\n  '{{ $(\"When Executed by Another Workflow\").item.json.userId }}',\n  8,\n  'inbound'\n) as messages;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1616,384],"id":"b5cca3d1-b51f-4c06-ace4-37fafb4122d8","name":"Get Last N Messages","alwaysOutputData":true,"retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"operation":"executeQuery","query":"select tz, strength, observed_at\nfrom public.tz_presence_cache\nwhere user_id = '{{ $('When Executed by Another Workflow').item.json.userId }}';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1168,264],"id":"6c77bfc1-5187-41f7-9ea2-556628ae8c6a","name":"Get Cache","alwaysOutputData":true,"retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c3f6ba0e-a006-42c1-b766-70b5aba9026a","leftValue":"={{ $json.isNotEmpty() && $json.strength >= 0.6 && (Math.abs($json.observed_at.toDateTime().diffToNow('hours'))) <= 24 }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-944,264],"id":"5ada7145-1777-4060-86f6-c993e987fbfe","name":"Use Cache?"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4d59c2e2-5e56-4fab-a8df-791763632dfb","leftValue":"={{ $json.isNotEmpty() }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1392,384],"id":"c6178257-1d07-49b0-ad6b-bfc06210a8ea","name":"Messages?"},{"parameters":{"operation":"executeQuery","query":"select tz, strength, observed_at\nfrom public.tz_presence_cache\nwhere user_id = '{{ $('When Executed by Another Workflow').item.json.userId }}';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1168,656],"id":"c470a01e-d5c3-4cd5-bd91-716aa1499a1e","name":"Get Cache [No Messages]","alwaysOutputData":true,"retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c3f6ba0e-a006-42c1-b766-70b5aba9026a","leftValue":"={{ $json.isNotEmpty() && $json.strength >= 0.6 && (Math.abs($json.observed_at.toDateTime().diffToNow('hours'))) <= 24 }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-944,656],"id":"8f5d27ff-678e-4b8d-8b30-85a089469d17","name":"Use Cache? [No Messages]"},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{ $json.tz }}\",\n  \"confidence\": {{ $json.strength }},\n  \"source\": \"cache\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-584,464],"id":"3bc26f9f-2b8f-418f-b0af-dfdad366577d","name":"Set (Cache)"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"043ca09e-4f59-4993-ad99-c2252254e300","leftValue":"={{ $json.output.present_like && $json.output.time_zone && $json.output.confidence >= 0.75}}","rightValue":0,"operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-224,64],"id":"cfb957f8-09dd-4517-9db6-8cf30202e250","name":"Confident Output?"},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{$('Get Time Zone from Primary Calendar').item.json.timeZone}}\",\n  \"confidence\": 0.6,\n  \"source\": \"calendar_setting\",\n  \"reason\": \"Falling back to Google Calendar account setting.\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[672,336],"id":"52b5a8fc-b4a1-4c68-99ef-56026a8bf520","name":"Set (Calendar Settings)"},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"Etc/UTC\",\n  \"confidence\": 0.1,\n  \"source\": \"default\",\n  \"reason\": \"All other methods failed. Defaulting to UTC\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[448,528],"id":"42030e3c-9964-40ba-bec2-ab9e91e901d3","name":"Set (UTC Default)"},{"parameters":{"model":"anthropic/claude-sonnet-4.5","options":{"temperature":0.5}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[-720,80],"id":"2854d080-a0b5-4a11-a7e8-0ddc0cabc6c4","name":"Claude 4.5","credentials":{"openRouterApi":{"id":"SeBKTiKFu0nP1GsL","name":"OpenRouter account"}}}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get Last N Messages","type":"main","index":0}]]},"Get Token":{"main":[[{"node":"Get Time Zone from Primary Calendar","type":"main","index":0}]]},"Get Time Zone from Primary Calendar":{"main":[[{"node":"Upsert (Calendar Settings)","type":"main","index":0}],[{"node":"Set (UTC Default)","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"LLM Verifier","type":"ai_outputParser","index":0}]]},"4.1":{"ai_languageModel":[[{"node":"Structured Output Parser","type":"ai_languageModel","index":0}]]},"LLM Verifier":{"main":[[{"node":"Confident Output?","type":"main","index":0}]]},"Upsert (Chat)":{"main":[[{"node":"Set (Chat)","type":"main","index":0}]]},"Upsert (Calendar Settings)":{"main":[[{"node":"Set (Calendar Settings)","type":"main","index":0}]]},"Get Last N Messages":{"main":[[{"node":"Messages?","type":"main","index":0}]]},"Get Cache":{"main":[[{"node":"Use Cache?","type":"main","index":0}]]},"Use Cache?":{"main":[[{"node":"Set (Cache)","type":"main","index":0}],[{"node":"LLM Verifier","type":"main","index":0}]]},"Messages?":{"main":[[{"node":"Get Cache","type":"main","index":0}],[{"node":"Get Cache [No Messages]","type":"main","index":0}]]},"Get Cache [No Messages]":{"main":[[{"node":"Use Cache? [No Messages]","type":"main","index":0}]]},"Use Cache? [No Messages]":{"main":[[{"node":"Set (Cache)","type":"main","index":0}],[{"node":"Get Token","type":"main","index":0}]]},"Confident Output?":{"main":[[{"node":"Upsert (Chat)","type":"main","index":0}],[{"node":"Get Token","type":"main","index":0}]]},"Claude 4.5":{"ai_languageModel":[[{"node":"LLM Verifier","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"userId":"t07ZDdtiVLduDE3RuRHGKowoSd0f"}}],"Get Last N Messages":[{"json":{"messages":[{"id":3846,"ts":"2025-10-28T06:55:33+00:00","text":"Yes this is his email","direction":"inbound","sender_id":"1285717306"},{"id":3844,"ts":"2025-10-28T06:54:48+00:00","text":"Hi I want to organize a meeting with Jay Eum on Oct 30 in San Francisco from 4:30-5:30pm at Shack15","direction":"inbound","sender_id":"1285717306"},{"id":3794,"ts":"2025-10-22T13:18:42+00:00","text":"Please book the meeting with Willy. His email is: william@rise-capital.com","direction":"inbound","sender_id":"1285717306"},{"id":3792,"ts":"2025-10-22T13:17:36+00:00","text":"The meeting with Willy starts from 3pm, so there is no conflict","direction":"inbound","sender_id":"1285717306"},{"id":3790,"ts":"2025-10-22T13:16:36+00:00","text":"I would also like to meet with Willy Wang tomorrow at 3pm at the Oak Door at the Grand Hyatt","direction":"inbound","sender_id":"1285717306"},{"id":3788,"ts":"2025-10-22T13:16:02+00:00","text":"2. I would like to meet at the Oak Door at Grand Hyatt Tokyo","direction":"inbound","sender_id":"1285717306"},{"id":3786,"ts":"2025-10-22T13:14:55+00:00","text":"Meeting with Marisa tmr in Tokyo at 2pm please","direction":"inbound","sender_id":"1285717306"},{"id":3782,"ts":"2025-10-22T11:59:45+00:00","text":"basilhwang@hauzen.hk\n\nVenue: Salisterra, The Upper House","direction":"inbound","sender_id":"1285717306"}]}}],"Get Cache":[{"json":{"tz":"America/Bogota","strength":"0.6","observed_at":"2025-10-10T08:00:46.997Z"}}]},"versionId":"5c646cd7-8dc7-4a04-b136-0368f699a31b","triggerCount":0,"shared":[{"updatedAt":"2025-10-30T20:30:59.716Z","createdAt":"2025-10-30T20:30:59.716Z","role":"workflow:owner","workflowId":"2kVDxghBRFinYgag","projectId":"8nyfoRCh3nEYWaKJ"}],"tags":[]}
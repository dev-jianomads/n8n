{"updatedAt":"2025-10-23T17:11:03.350Z","createdAt":"2025-10-23T17:11:03.350Z","id":"kdDzgQp2ndYz2VW3","name":"(DEPRECATED) [TG] Get Token for Telegram Integration","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"user_id"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-368,-136],"id":"818f4247-2df8-4741-80de-ec8c290d4bf0","name":"When Executed by Another Workflow"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"/**\n * Check if a user's access token is expired.\n * @param {{ access_token?: string | null, token_expiration_date?: string | null }} user\n * @returns {boolean} true if missing or expired\n */\nfunction isTokenExpired(user) {\n  const { access_token_2: token, token_expiration_date_2: exp } = user;\n  // No token or no expiration date → expired\n  if (!token || !exp) return true;\n\n  // Normalize \"2025-04-16 21:58:02+00\" → \"2025-04-16T21:58:02+00\"\n  const iso = exp.replace(' ', 'T');\n  const expiresAt = new Date(iso);\n\n  // Invalid date → treat as expired\n  if (isNaN(expiresAt.getTime())) return true;\n\n  // Compare against now (Date.now() is UTC‑based under the hood)\n  return expiresAt.getTime() < Date.now();\n}\n\nreturn {\n  json: {\n    user: $input.item.json,\n    expiredToken: isTokenExpired($input.item.json)\n  }\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[528,-136],"id":"aa0de148-606e-4cb4-bb34-0b3bb412158c","name":"Check Token Expiration"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"05a3655d-1a5c-407e-abd9-b77305dc158a","leftValue":"={{ $json.expiredToken }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[752,-136],"id":"0ac2838c-dbf2-41e2-8ad0-46eacad170ee","name":"Expired Token?"},{"parameters":{"assignments":{"assignments":[{"id":"cb8984ad-464a-45b8-9d96-89e6c213699e","name":"accessToken","value":"={{ $('Set User').item.json.access_token_2 }}","type":"string"},{"id":"c2055894-db45-4a28-8375-2472fde8585c","name":"user","value":"={{ $('Set User').item.json }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[976,-40],"id":"d6d55f91-d1e7-4b1f-917c-53dba34d5a34","name":"Return Token and User"},{"parameters":{"operation":"addToDate","magnitude":"={{ $now.toUTC() }}","timeUnit":"seconds","duration":"={{ $json.body.expires_in - 120 }}","outputFieldName":"tokenExpirationDate","options":{"includeInputFields":true}},"type":"n8n-nodes-base.dateTime","typeVersion":2,"position":[1200,-400],"id":"03f4c30b-0172-4b50-95ff-95fb762889c0","name":"Compute Expiration Date"},{"parameters":{"assignments":{"assignments":[{"id":"ae218e7e-2994-42cf-82d0-81bd7deea876","name":"accessToken","value":"={{ $json.access_token_2 }}","type":"string"},{"id":"8d144ce4-10cf-4da7-9a48-3be19ea43eda","name":"user","value":"={{ $json }}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1872,-400],"id":"38f4c342-9268-45d8-93f5-a94a158cc843","name":"Return Refreshed Token & User"},{"parameters":{"method":"POST","url":"https://oauth2.googleapis.com/token","sendQuery":true,"queryParameters":{"parameters":[{"name":"client_id","value":"={{ $json.user.client_id_2 }}"},{"name":"client_secret","value":"={{ $json.user.client_secret_2 }}"},{"name":"refresh_token","value":"={{ $json.user.refresh_token_2 }}"},{"name":"grant_type","value":"refresh_token"}]},"options":{"response":{"response":{"fullResponse":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[976,-232],"id":"fe557fde-f43b-4b27-9081-4a0199c65f6c","name":"Get New Token","onError":"continueErrorOutput"},{"parameters":{"errorMessage":"Could not refresh token."},"type":"n8n-nodes-base.stopAndError","typeVersion":1,"position":[1872,-64],"id":"2d9211db-d11a-49b8-8ce0-de0678943517","name":"Stop and Error"},{"parameters":{"operation":"executeQuery","query":"SELECT * \nFROM \"public\".\"users\"\nWHERE id = '{{ $json.user_id }}'\n  AND (refresh_expired_2 = FALSE OR refresh_expired_2 IS NULL)\nLIMIT 1;","options":{"connectionTimeout":2}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-144,-136],"id":"e8c4646e-7509-47eb-93aa-52e785caa500","name":"Get User","retryOnFail":true,"maxTries":5,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"update","schema":{"__rl":true,"value":"public","mode":"list","cachedResultName":"public"},"table":{"__rl":true,"value":"users","mode":"list","cachedResultName":"users"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Expired Token?').item.json.user.id }}","access_token_2":"={{ $json.body.access_token }}","token_expiration_date_2":"={{ $json.tokenExpirationDate }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":true,"defaultMatch":true,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"created_at","displayName":"created_at","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":true},{"id":"email","displayName":"email","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"display_name","displayName":"display_name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"provider","displayName":"provider","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"access_token","displayName":"access_token","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"refresh_token","displayName":"refresh_token","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"expires_in","displayName":"expires_in","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"client_id","displayName":"client_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"client_secret","displayName":"client_secret","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"refresh_expired","displayName":"refresh_expired","required":false,"defaultMatch":false,"display":true,"type":"boolean","canBeUsedToMatch":true,"removed":true},{"id":"time_zone","displayName":"time_zone","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"auth_code","displayName":"auth_code","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"token_expiration_date","displayName":"token_expiration_date","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":true},{"id":"position","displayName":"position","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"role","displayName":"role","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"phone_number","displayName":"phone_number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"access_token_2","displayName":"access_token_2","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"refresh_token_2","displayName":"refresh_token_2","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"refresh_expired_2","displayName":"refresh_expired_2","required":false,"defaultMatch":false,"display":true,"type":"boolean","canBeUsedToMatch":true,"removed":true},{"id":"signal_source_uuid","displayName":"signal_source_uuid","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"token_expiration_date_2","displayName":"token_expiration_date_2","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"connectionTimeout":3}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1424,-400],"id":"f7eb9c4f-56ed-498d-8508-0f546721ba28","name":"Store Token","credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"get","tableId":"users","filters":{"conditions":[{"keyName":"id","keyValue":"={{ $('When Executed by Another Workflow').item.json.user_id }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[80,-64],"id":"4473a085-1292-47d1-ab29-cded5e3457c2","name":"Get User by Id","credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"operation":"update","tableId":"users","matchType":"allFilters","filters":{"conditions":[{"keyName":"id","condition":"eq","keyValue":"={{ $('Expired Token?').item.json.user.id }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"refresh_expired_2","fieldValue":"true"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1424,-136],"id":"19217ef6-09c9-4f8a-8c57-e79e70aefdc8","name":"Refresh Expired Token","credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"operation":"update","tableId":"users","matchType":"allFilters","filters":{"conditions":[{"keyName":"id","condition":"eq","keyValue":"={{ $('Expired Token?').item.json.user.id }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"token_expiration_date_2","fieldValue":"={{ $('Compute Expiration Date').item.json.tokenExpirationDate }}"},{"fieldId":"access_token_2","fieldValue":"={{ $json.body.access_token }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1648,-328],"id":"8b3861a5-efcf-4ffc-a2e0-354ae7f6bbe0","name":"Store_Token","credentials":{"supabaseApi":{"id":"PwJN4yKDRZqivq2f","name":"Supabase account"}}},{"parameters":{"mode":"raw","jsonOutput":"={{ $json }}","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[304,-136],"id":"73ca0661-7113-47de-83e3-2d8d6c4ed4c4","name":"Set User"},{"parameters":{"operation":"executeQuery","query":"UPDATE users\nSET refresh_expired_2 = TRUE\nWHERE id = '{{ $('Expired Token?').item.json.user.id }}'","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1200,-64],"id":"6ae6c0b4-0449-4e10-a1dc-f33904e65980","name":"Mark Token as Expired","retryOnFail":true,"credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}},"onError":"continueErrorOutput"},{"parameters":{"workflowId":{"__rl":true,"value":"B4R5PCXZUaCSSdbV","mode":"list","cachedResultUrl":"/workflow/B4R5PCXZUaCSSdbV","cachedResultName":"[TG] Send Telegram Message"},"workflowInputs":{"mappingMode":"defineBelow","value":{"telegramId":"={{ $('Set User').item.json.telegram_id }}","chatId":"={{ $('Set User').item.json.telegram_id }}","message":"=It seems we're having issues connecting to your Google Services. \n\nPlease log in again here: https://cal.hellotomo.ai?reauth=true&user_id={{$('Set User').item.json.id}}","toolActivity":"={{ [] }}"},"matchingColumns":[],"schema":[{"id":"telegramId","displayName":"telegramId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"message","displayName":"message","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"chatId","displayName":"chatId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"toolActivity","displayName":"toolActivity","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"array","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.3,"position":[1648,-64],"id":"8d4c5cc5-4430-42bd-93a4-eaa5a2308baf","name":"Call '[TG] Send Telegram Message'"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get User","type":"main","index":0}]]},"Check Token Expiration":{"main":[[{"node":"Expired Token?","type":"main","index":0}]]},"Expired Token?":{"main":[[{"node":"Get New Token","type":"main","index":0}],[{"node":"Return Token and User","type":"main","index":0}]]},"Compute Expiration Date":{"main":[[{"node":"Store Token","type":"main","index":0}]]},"Get New Token":{"main":[[{"node":"Compute Expiration Date","type":"main","index":0}],[{"node":"Mark Token as Expired","type":"main","index":0}]]},"Get User":{"main":[[{"node":"Set User","type":"main","index":0}],[{"node":"Get User by Id","type":"main","index":0}]]},"Store Token":{"main":[[{"node":"Return Refreshed Token & User","type":"main","index":0}],[{"node":"Store_Token","type":"main","index":0}]]},"Get User by Id":{"main":[[{"node":"Set User","type":"main","index":0}]]},"Refresh Expired Token":{"main":[[{"node":"Call '[TG] Send Telegram Message'","type":"main","index":0}]]},"Store_Token":{"main":[[{"node":"Return Refreshed Token & User","type":"main","index":0}]]},"Set User":{"main":[[{"node":"Check Token Expiration","type":"main","index":0}]]},"Mark Token as Expired":{"main":[[{"node":"Call '[TG] Send Telegram Message'","type":"main","index":0}],[{"node":"Refresh Expired Token","type":"main","index":0}]]},"Call '[TG] Send Telegram Message'":{"main":[[{"node":"Stop and Error","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"63JMaA3ATIsJVc6Y"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"user_id":"UcwiKP2pxzVISUSNlm5nngCWxM8P"}}]},"versionId":"ae5ca5cd-5442-4803-9951-df1c26508f5a","triggerCount":0,"shared":[{"updatedAt":"2025-10-23T17:11:03.350Z","createdAt":"2025-10-23T17:11:03.350Z","role":"workflow:owner","workflowId":"kdDzgQp2ndYz2VW3","projectId":"8nyfoRCh3nEYWaKJ"}],"tags":[]}
{"createdAt":"2025-07-30T17:52:59.488Z","updatedAt":"2025-10-07T21:00:34.762Z","id":"DHcoEXUvqWWKxbZD","name":"üñ•Ô∏è [TG] Get Time Zone","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"userId"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-1328,224],"id":"ba9be2d1-ee5a-4f97-b850-0cac30d371da","name":"When Executed by Another Workflow"},{"parameters":{"workflowId":{"__rl":true,"value":"OH9PUovRKlvZel5e","mode":"list","cachedResultUrl":"/workflow/OH9PUovRKlvZel5e","cachedResultName":"üñ•Ô∏è [TG] Get Token for Telegram Integration"},"workflowInputs":{"mappingMode":"defineBelow","value":{"user_id":"={{ $('When Executed by Another Workflow').first().json.userId }}"},"matchingColumns":["user_id"],"schema":[{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[240,224],"id":"d26910ab-b781-41d7-bda9-b53bc361b94c","name":"Get Token"},{"parameters":{"url":"https://www.googleapis.com/calendar/v3/calendars/primary","sendQuery":true,"queryParameters":{"parameters":[{"name":"fields","value":"timeZone"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get Token').first().json.accessToken }}"},{"name":"Content-Type","value":"application/json"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,224],"id":"2cd47bc5-7e1c-4212-96ab-bec13a62b5e0","name":"Get Time Zone from Primary Calendar","retryOnFail":true,"alwaysOutputData":false,"onError":"continueErrorOutput"},{"parameters":{"jsonSchemaExample":"{\"time_zone\":\"Asia/Tokyo\",\n  \"confidence\":0.8,\n  \"reason\":\"The reason\"}","autoFix":true},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[-576,272],"id":"4cc92dde-3cc4-4f48-a5cd-7dc50770ce35","name":"Structured Output Parser"},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"04fc2c96-d0d3-4303-b046-a117b5f7a8fc","leftValue":"={{ $json.output.confidence }}","rightValue":0.5,"operator":{"type":"number","operation":"gte"}}],"combinator":"and"},"options":{"ignoreCase":true}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1328,-384],"id":"8adabe3b-de70-40f9-ba07-ebbc73e345ca","name":"Time Zone?"},{"parameters":{"assignments":{"assignments":[{"id":"efe47c53-2fd8-4b01-b911-dc97d0c7f18e","name":"timeZone","value":"={{ $json.output.time_zone }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1104,-384],"id":"5cc5f1ce-7c79-48a1-b1c1-be10892b9ef3","name":"Set Extracted Time Zone"},{"parameters":{"assignments":{"assignments":[{"id":"0fdd8902-0577-4469-9832-717dd35739c2","name":"timeZone","value":"={{ $('Time Zone?').item.json.output.time_zone }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[688,320],"id":"e7f3b207-58e9-4472-8240-e8cb7b13f4ec","name":"Set Low Confidence Time Zone"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-592,480],"id":"31c3b54e-a45d-469f-9d03-ac2ee22ca87b","name":"4.1","credentials":{"openAiApi":{"id":"JNBPFneOXwzjzSKh","name":"OpenAI account"}}},{"parameters":{"operation":"executeQuery","query":"select api.resolve_time_zone($1::text, $2::int, $3::text) as payload;","options":{"queryReplacement":"={{[ $json.userId, 10, 'dev' ]}}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1104,224],"id":"bef9501f-86de-43d4-9e74-e5a600b89683","name":"Resolve TZ","credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f622ca00-7357-47b4-8636-6d762656c207","leftValue":"={{ $json.payload.decision.need_llm }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-880,224],"id":"6cc8f3d3-929a-4b95-9087-2fbd633ef7e5","name":"Need LLM?"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6508ce34-03d7-4064-b8b6-557926d47af8","leftValue":"={{ $('Resolve TZ').item.json.payload.decision.need_calendar }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[16,320],"id":"acab28bc-ca0c-468c-9f57-013f86cf059b","name":"Need Calendar?"},{"parameters":{"promptType":"define","text":"=Candidates: {{ JSON.stringify($json.payload.candidates || []) }}\nMessages (newest‚Üíoldest): {{ JSON.stringify($json.payload.messages_window || []) }}\nCached TZ: {{ $json.payload.cache?.tz ?? null }}\n","hasOutputParser":true,"options":{"systemMessage":"=You must choose the user's CURRENT time zone ONLY from the provided candidates' \"mapped_tz\" values. \nIgnore future plans (e.g., tomorrow/next week). \nIf unsure, return null. \nOutput strict JSON: {\"time_zone\":\"IANA or null\",\"confidence\":0..1,\"reason\":\"...\"}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-656,48],"id":"bf84975f-b7c3-4e7a-9992-f4e973218c5f","name":"LLM Verifier"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a2500d23-23c0-4243-9837-79c64b57bb2b","leftValue":"={{ $json.output.confidence }}","rightValue":0.85,"operator":{"type":"number","operation":"gte"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-224,-16],"id":"7c274644-1ba5-4648-9618-4a6b80923a36","name":"LLM Confident?"},{"parameters":{"operation":"executeQuery","query":"insert into dev.tz_presence_cache\n  (user_id, tz, source, strength, observed_at, committed_at, last_checked_at, evidence_message_id, evidence_text, updated_at)\nvalues\n  ($1::text, $2::text, 'chat_explicit', $3::numeric, now(), now(), now(), null, $4::text, now())\non conflict (user_id) do update set\n  tz = excluded.tz,\n  source = excluded.source,\n  strength = excluded.strength,\n  observed_at = excluded.observed_at,\n  committed_at = excluded.committed_at,\n  last_checked_at = excluded.last_checked_at,\n  evidence_message_id = excluded.evidence_message_id,\n  evidence_text = excluded.evidence_text,\n  updated_at = now();\n","options":{"queryReplacement":"={{ [$('When Executed by Another Workflow').item.json.userId, $json.output.time_zone, $json.output.confidence, $json.output.reason] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[16,0],"id":"028a77d4-bc77-419f-932e-5595544fd806","name":"Upsert (Chat)","credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{$('Get Time Zone from Primary Calendar').item.json.timeZone}}\",\n  \"confidence\": 0.6,\n  \"source\": \"calendar_setting\",\n  \"reason\": \"Falling back to Google Calendar account setting.\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[912,128],"id":"21c25881-c4c1-4ffa-9040-d7b99cfab6a8","name":"Set (Calendar Settings)"},{"parameters":{"operation":"executeQuery","query":"update dev.tz_presence_cache\nset last_checked_at = now(), updated_at = now()\nwhere user_id = $1::text;\n","options":{"queryReplacement":"={{ [$('When Executed by Another Workflow').item.json.userId] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[240,416],"id":"3e059970-6978-495e-8b0b-cb8f694730b7","name":"'Touch' Cache","credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{$('Resolve TZ').item.json.payload.cache.tz}}\",\n  \"confidence\": {{ Math.min(1, ($('Resolve TZ').item.json.payload.cache.strength ?? 0.9)) }},\n  \"source\": \"cache\",\n  \"reason\": \"Using last reliable chat-derived location; no new evidence.\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[464,416],"id":"e6fb4745-45f0-49a2-9244-b161098b839c","name":"Set (Cache)"},{"parameters":{"mode":"raw","jsonOutput":"={\n  \"time_zone\": \"{{ $('LLM Confident?').item.json.output.time_zone }}\",\n  \"confidence\": {{ $('LLM Confident?').item.json.output.confidence }},\n  \"source\": \"chat_explicit\",\n  \"reason\": \"{{ $('LLM Confident?').item.json.output.reason }}\"\n}\n","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[240,0],"id":"585892eb-3219-4e99-a0a1-e4a42ede11c1","name":"Set (Chat)"},{"parameters":{"operation":"executeQuery","query":"insert into dev.tz_presence_cache\n  (user_id, tz, source, strength, observed_at, committed_at, last_checked_at, updated_at)\nvalues\n  ($1::text, $2::text, 'calendar_setting', 0.6, now(), now(), now(), now())\non conflict (user_id) do update set\n  tz = excluded.tz,\n  source = excluded.source,\n  strength = excluded.strength,\n  observed_at = excluded.observed_at,\n  committed_at = excluded.committed_at,\n  last_checked_at = excluded.last_checked_at,\n  updated_at = now();","options":{"queryReplacement":"={{ [$('When Executed by Another Workflow').item.json.userId, $json.timeZone] }}"}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[688,128],"id":"6ea45297-e52b-4088-ba6f-eccdb681c265","name":"Upsert (Calendar Settings)","credentials":{"postgres":{"id":"hcrXy03eb7cfXzVe","name":"Supabase TX Pooler"}}}],"connections":{"Get Token":{"main":[[{"node":"Get Time Zone from Primary Calendar","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Resolve TZ","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"LLM Verifier","type":"ai_outputParser","index":0}]]},"Time Zone?":{"main":[[{"node":"Set Extracted Time Zone","type":"main","index":0}],[]]},"Get Time Zone from Primary Calendar":{"main":[[{"node":"Upsert (Calendar Settings)","type":"main","index":0}],[{"node":"Set Low Confidence Time Zone","type":"main","index":0}]]},"4.1":{"ai_languageModel":[[{"node":"LLM Verifier","type":"ai_languageModel","index":0},{"node":"Structured Output Parser","type":"ai_languageModel","index":0}]]},"Resolve TZ":{"main":[[{"node":"Need LLM?","type":"main","index":0}]]},"Need LLM?":{"main":[[{"node":"LLM Verifier","type":"main","index":0}],[{"node":"Need Calendar?","type":"main","index":0}]]},"LLM Verifier":{"main":[[{"node":"LLM Confident?","type":"main","index":0}]]},"LLM Confident?":{"main":[[{"node":"Upsert (Chat)","type":"main","index":0}],[{"node":"Need Calendar?","type":"main","index":0}]]},"Need Calendar?":{"main":[[{"node":"Get Token","type":"main","index":0}],[{"node":"'Touch' Cache","type":"main","index":0}]]},"'Touch' Cache":{"main":[[{"node":"Set (Cache)","type":"main","index":0}]]},"Upsert (Chat)":{"main":[[{"node":"Set (Chat)","type":"main","index":0}]]},"Upsert (Calendar Settings)":{"main":[[{"node":"Set (Calendar Settings)","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"userId":"sYegOuBfnbN90dMlEDaSbhZaKRC2"}}]},"versionId":"f0421cb4-5a4f-4efd-b2e6-4e2656124d95","triggerCount":0,"shared":[{"createdAt":"2025-07-30T17:52:59.488Z","updatedAt":"2025-07-30T17:52:59.488Z","role":"workflow:owner","workflowId":"DHcoEXUvqWWKxbZD","projectId":"8nyfoRCh3nEYWaKJ"}],"tags":[]}